{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bem vindo a nossa documenta\u00e7\u00e3o da API do Team Bee! Essa documenta\u00e7\u00e3o foi inteiramente escrita em mkdocs! Para visitar como ela funciona, voc\u00ea pode visitar essa doc! mkdocs.org . Roadmap sobre os principais assuntos a serem estudados: Uma das principais d\u00favidas da equipe \u00e9: \"por onde eu come\u00e7o?\". Diante disso, desenvolvemos um roadmap dos conhecimentos m\u00ednimos para dar o ponta p\u00e9 inicial! Roadmap O que voc\u00ea vai encontrar nessa documenta\u00e7\u00e3o? Backend Implementa\u00e7\u00e3o do WSGI PEP333 Frontend Wireframe e fluxos do produto Biblioteca Nessa biblioteca voc\u00ea vai encontrar nossas fun\u00e7\u00f5es documentadas profundamente. Al\u00e9m disso, materiais importante para compreender o funcionamento t\u00e9cnico do nosso projeto. Git e github. Como voc\u00ea pode puxar atualiza\u00e7\u00f5es e commitar no local correto? Como fazer o pull request no local correto. Como se fosse a primeira vez: configurando upstream Depois de ter branch s-01 criada! Configura\u00e7\u00f5es do projeto. Como consigo rodar esse projeto na minha m\u00e1quina? Virtualenvs Instale o pyenv Metodol\u00f3gias \u00e1geis - scrum O documento que regeu o manifesto \u00e1gil possui 12 princ\u00edpios. Leia sempre que tiver d\u00favida se a equipe ou voc\u00ea est\u00e1 indo bem! Maior prioridade A satisfa\u00e7\u00e3o do cliente somados as entregas parciais e cont\u00ednuas do software, de forma adianta e com valor agredado. N\u00e3o h\u00e1 foco em documenta\u00e7\u00f5es r\u00edgidas, e sim na itera\u00e7\u00e3o constante com o cliente. Mudan\u00e7as s\u00e3o bem vindas. O in\u00edcio do desenvolvimento de software \u00e9 dificil identificar todos os requisitos. O software precisa amadurecer e o cliente muitas vezes n\u00e3o consegue prever todas as suas necessidades antes de ter uma vers\u00e3o funcional do software. O m\u00e9todo \u00e1gil adota a filosofia de que mudan\u00e7as feitas mais tarde no processo n\u00e3o s\u00e3o prejudiciais. Al\u00e9m dissotodas as mudan\u00e7as que contribuem para a melhoria do software dentro das necessidades do cliente s\u00e3o bem-vindas. Entregas frequentes As entregas devem ser frequentes, de funcionalidades que estejam us\u00e1veis no ideal do MVP (m\u00ednimo produto vi\u00e1vel).Periodicidade de tempo de entregas r\u00e1pidas d\u00e3o um ritmo ao trabalho da equipe de desenvolvimento. Atrasos de entrega constantem den\u00fanciam a fal\u00eancia dos prazos. Equipe \u00fanica de neg\u00f3cios e desenvolvedores Um dos princ\u00edpios da abordagem \u00e1gil \u00e9 ter uma equipe \u00fanica de neg\u00f3cios e desenvolvedores, pois o trabalho conjunto das pessoas de neg\u00f3cio com os desenvolvedores \u00e9 importante para manter a mesma comunica\u00e7\u00e3o durante todo o projeto. Portanto, PO e SM codam tamb\u00e9m. Motiva\u00e7\u00e3o Equipe motivada \u00e9 sinal de qualidade no proeto. \u00c9 necess\u00e1rio que haja uma confian\u00e7a na equipe para o desenvolvimento do trabalho que precisa ser realizado. Na abordagem \u00e1gil as equipes \u00e1geis s\u00e3o autogerenciadas, com uma comunica\u00e7\u00e3o direta e constante com feedbacks frequentes com o comprometimento de todos os envolvidos para a entrega. Conversa frente a frente. Um dos princ\u00edpios do manifesto \u00e1gil \u00e9 a conversa frente a frente, face a face, presencial. \u00c9 um m\u00e9todo eficiente e eficaz para a transmiss\u00e3o de qualquer informa\u00e7\u00e3o para a equipe e entre as equipes de desenvolvimento do software.. Os feedbacks devem ser diretos e na cara. Software Funcional \u00c9 preciso garantir enregas ao fim da sprint. Um dos princ\u00edpios do manifesto \u00e1gil \u00e9 a entrega de um software funcional em v\u00e1rias etapas at\u00e9 a entrega do projeto final do software que est\u00e1 sendo desenvolvido. Desenvolvimento sustent\u00e1vel Para garantir um desenvolvimento sustent\u00e1vel no m\u00e9todo \u00e1gil, \u00e9 importante evitar a produtividade por horas de trabalho, o que cansa o desenvolvedor, por\u00e9m, valorizando a produtividade pela capacidade criativa na execu\u00e7\u00e3o. Agilidade \u00c9 importante direcionar a aten\u00e7\u00e3o \u00e0s necessidades de mudan\u00e7a e evitar documenta\u00e7\u00f5es extensas. Simplicidade Cria\u00e7\u00e3o e a entrega de um software de qualidade que resolve as necessidades do cliente. Isso \u00e9 realmente essencial? \u00c9 poss\u00edvel torn\u00e1-lo simples? As respostas de perguntas como essas direcionam o desenvolvimento do software para a sua simplicidade. Times Auto Organiz\u00e1veis Buscar por um conjunto restrito e muito simples de regras que deve ser obedecido por todos os membros da equipe. Reflex\u00f5es regulares Compreender o processo em que est\u00e1 o desenvolvimento do software, assim como velocidade e dinamismo da equipe e cada um dos seus membros. Em conversas francas e din\u00e2micas de grupo. Commandos para rodar essa documenta\u00e7\u00e3o localmente mkdocs serve - Inicia o projeto na sua m\u00e1quina mkdocs build - Constroi a documenta\u00e7\u00e3o mkdocs -h - Devolve comandos de ajuda","title":"Home"},{"location":"#bem-vindo-a-nossa-documentacao-da-api-do-team-bee","text":"Essa documenta\u00e7\u00e3o foi inteiramente escrita em mkdocs! Para visitar como ela funciona, voc\u00ea pode visitar essa doc! mkdocs.org .","title":"Bem vindo a nossa documenta\u00e7\u00e3o da API do Team Bee!"},{"location":"#roadmap-sobre-os-principais-assuntos-a-serem-estudados","text":"Uma das principais d\u00favidas da equipe \u00e9: \"por onde eu come\u00e7o?\". Diante disso, desenvolvemos um roadmap dos conhecimentos m\u00ednimos para dar o ponta p\u00e9 inicial! Roadmap","title":"Roadmap sobre os principais assuntos a serem estudados:"},{"location":"#o-que-voce-vai-encontrar-nessa-documentacao","text":"","title":"O que voc\u00ea vai encontrar nessa documenta\u00e7\u00e3o?"},{"location":"#backend","text":"Implementa\u00e7\u00e3o do WSGI PEP333","title":"Backend"},{"location":"#frontend","text":"Wireframe e fluxos do produto","title":"Frontend"},{"location":"#biblioteca","text":"Nessa biblioteca voc\u00ea vai encontrar nossas fun\u00e7\u00f5es documentadas profundamente. Al\u00e9m disso, materiais importante para compreender o funcionamento t\u00e9cnico do nosso projeto. Git e github. Como voc\u00ea pode puxar atualiza\u00e7\u00f5es e commitar no local correto? Como fazer o pull request no local correto. Como se fosse a primeira vez: configurando upstream Depois de ter branch s-01 criada! Configura\u00e7\u00f5es do projeto. Como consigo rodar esse projeto na minha m\u00e1quina? Virtualenvs Instale o pyenv","title":"Biblioteca"},{"location":"#metodologias-ageis-scrum","text":"O documento que regeu o manifesto \u00e1gil possui 12 princ\u00edpios. Leia sempre que tiver d\u00favida se a equipe ou voc\u00ea est\u00e1 indo bem! Maior prioridade A satisfa\u00e7\u00e3o do cliente somados as entregas parciais e cont\u00ednuas do software, de forma adianta e com valor agredado. N\u00e3o h\u00e1 foco em documenta\u00e7\u00f5es r\u00edgidas, e sim na itera\u00e7\u00e3o constante com o cliente. Mudan\u00e7as s\u00e3o bem vindas. O in\u00edcio do desenvolvimento de software \u00e9 dificil identificar todos os requisitos. O software precisa amadurecer e o cliente muitas vezes n\u00e3o consegue prever todas as suas necessidades antes de ter uma vers\u00e3o funcional do software. O m\u00e9todo \u00e1gil adota a filosofia de que mudan\u00e7as feitas mais tarde no processo n\u00e3o s\u00e3o prejudiciais. Al\u00e9m dissotodas as mudan\u00e7as que contribuem para a melhoria do software dentro das necessidades do cliente s\u00e3o bem-vindas. Entregas frequentes As entregas devem ser frequentes, de funcionalidades que estejam us\u00e1veis no ideal do MVP (m\u00ednimo produto vi\u00e1vel).Periodicidade de tempo de entregas r\u00e1pidas d\u00e3o um ritmo ao trabalho da equipe de desenvolvimento. Atrasos de entrega constantem den\u00fanciam a fal\u00eancia dos prazos. Equipe \u00fanica de neg\u00f3cios e desenvolvedores Um dos princ\u00edpios da abordagem \u00e1gil \u00e9 ter uma equipe \u00fanica de neg\u00f3cios e desenvolvedores, pois o trabalho conjunto das pessoas de neg\u00f3cio com os desenvolvedores \u00e9 importante para manter a mesma comunica\u00e7\u00e3o durante todo o projeto. Portanto, PO e SM codam tamb\u00e9m. Motiva\u00e7\u00e3o Equipe motivada \u00e9 sinal de qualidade no proeto. \u00c9 necess\u00e1rio que haja uma confian\u00e7a na equipe para o desenvolvimento do trabalho que precisa ser realizado. Na abordagem \u00e1gil as equipes \u00e1geis s\u00e3o autogerenciadas, com uma comunica\u00e7\u00e3o direta e constante com feedbacks frequentes com o comprometimento de todos os envolvidos para a entrega. Conversa frente a frente. Um dos princ\u00edpios do manifesto \u00e1gil \u00e9 a conversa frente a frente, face a face, presencial. \u00c9 um m\u00e9todo eficiente e eficaz para a transmiss\u00e3o de qualquer informa\u00e7\u00e3o para a equipe e entre as equipes de desenvolvimento do software.. Os feedbacks devem ser diretos e na cara. Software Funcional \u00c9 preciso garantir enregas ao fim da sprint. Um dos princ\u00edpios do manifesto \u00e1gil \u00e9 a entrega de um software funcional em v\u00e1rias etapas at\u00e9 a entrega do projeto final do software que est\u00e1 sendo desenvolvido. Desenvolvimento sustent\u00e1vel Para garantir um desenvolvimento sustent\u00e1vel no m\u00e9todo \u00e1gil, \u00e9 importante evitar a produtividade por horas de trabalho, o que cansa o desenvolvedor, por\u00e9m, valorizando a produtividade pela capacidade criativa na execu\u00e7\u00e3o. Agilidade \u00c9 importante direcionar a aten\u00e7\u00e3o \u00e0s necessidades de mudan\u00e7a e evitar documenta\u00e7\u00f5es extensas. Simplicidade Cria\u00e7\u00e3o e a entrega de um software de qualidade que resolve as necessidades do cliente. Isso \u00e9 realmente essencial? \u00c9 poss\u00edvel torn\u00e1-lo simples? As respostas de perguntas como essas direcionam o desenvolvimento do software para a sua simplicidade. Times Auto Organiz\u00e1veis Buscar por um conjunto restrito e muito simples de regras que deve ser obedecido por todos os membros da equipe. Reflex\u00f5es regulares Compreender o processo em que est\u00e1 o desenvolvimento do software, assim como velocidade e dinamismo da equipe e cada um dos seus membros. Em conversas francas e din\u00e2micas de grupo.","title":"Metodol\u00f3gias \u00e1geis - scrum"},{"location":"#commandos-para-rodar-essa-documentacao-localmente","text":"mkdocs serve - Inicia o projeto na sua m\u00e1quina mkdocs build - Constroi a documenta\u00e7\u00e3o mkdocs -h - Devolve comandos de ajuda","title":"Commandos para rodar essa documenta\u00e7\u00e3o localmente"},{"location":"backend/","text":"Backend WGSI O que significa o WGSI? Significa We're Gonna Solve It! Esse ser\u00e1 o nome do nosso protocolinho para comunica\u00e7\u00e3o com servidor! Na verdade, o nome do arquivo deveria ser WSGI, um padr\u00e3o (protocolo) de interface de comunica\u00e7\u00e3o da aplica\u00e7\u00e3o python e o servidor web proposto pela PEP 333 . S\u00f3 que na hora do sono, acabamos digitando WGSI, ao inv\u00e9s de WSGI, e bem, Apesar do Vamos resolver isso! N\u00f3s n\u00e3o vamos resolver isso. Oficialmente, nosso protocolinho de comunica\u00e7\u00e3o com servidor ser\u00e1 conhecido como \"WGSI\", que, \u00e9 claro, ainda significa \"We're Gonna Solve It!\" (Vamos Resolver Isso!). Contudo, vamos apenas deixar assim, est\u00e1 bem? Mas procurem por WSGI! O PEP 333 diz que como tudo come\u00e7a! Tudo precisa come\u00e7ar com uma fun\u00e7\u00e3o (um cham\u00e1vel) que recebe um dicion\u00e1rio com vari\u00e1veis de ambiente e uma outra fun\u00e7\u00e3o. Ela ser\u00e1 respons\u00e1vel pela primeira comunica\u00e7\u00e3o com a web. A nossa fun\u00e7\u00e3o recebe o nome de \"retorna_response(environ, start_response)\". Ao executar o comando 'python3 wgsi.py', server deixa dispon\u00edvel na porta 8080 o acesso para nosso backend. Quando algu\u00e9m acessar essa porta, ent\u00e3o ser\u00e1 executado o retorna_response , terceiro par\u00e2metro da fun\u00e7\u00e3o make_server(). A fun\u00e7\u00e3o retorna_response() \u00e9 a fun\u00e7\u00e3o principal de um servidor WSGI. Ela recebe uma solicita\u00e7\u00e3o do navegador (atrav\u00e9s do par\u00e2metro environ) e retorna uma resposta (atrav\u00e9s do par\u00e2metro start_response). O primeiro passo da fun\u00e7\u00e3o \u00e9 criar uma inst\u00e2ncia de HTTPRequest a partir do dicion\u00e1rio environ. O objeto HTTPRequest representa a solicita\u00e7\u00e3o do navegador. Ele cont\u00e9m informa\u00e7\u00f5es como o m\u00e9todo HTTP, os cabe\u00e7alhos, a URL, os par\u00e2metros de consulta e outras informa\u00e7\u00f5es relacionadas \u00e0 solicita\u00e7\u00e3o. Em seguida, a fun\u00e7\u00e3o chama a fun\u00e7\u00e3o url_match() para encontrar qual view (fun\u00e7\u00e3o que recebe um request e responde um response) deve ser executada para atender \u00e0 solicita\u00e7\u00e3o. A fun\u00e7\u00e3o url_match() recebe a URL da solicita\u00e7\u00e3o como par\u00e2metro (request.path). Se a fun\u00e7\u00e3o url_match() retornar uma fun\u00e7\u00e3o view, a fun\u00e7\u00e3o retorna_response() chama a fun\u00e7\u00e3o view com o objeto HTTPRequest como par\u00e2metro. A fun\u00e7\u00e3o view \u00e9 respons\u00e1vel por gerar a resposta para a solicita\u00e7\u00e3o. Finalmente, a fun\u00e7\u00e3o retorna_response() chama a fun\u00e7\u00e3o start_response() para informar ao servidor que a solicita\u00e7\u00e3o foi processada. A fun\u00e7\u00e3o start_response() recebe o c\u00f3digo de status da resposta e uma lista de cabe\u00e7alhos como par\u00e2metros. O c\u00f3digo de status da resposta indica o resultado da solicita\u00e7\u00e3o. Por exemplo, o c\u00f3digo de status 200 OK indica que a solicita\u00e7\u00e3o foi bem-sucedida. Os cabe\u00e7alhos da resposta fornecem informa\u00e7\u00f5es adicionais sobre a resposta. Por exemplo, o cabe\u00e7alho Content-Type indica o tipo de conte\u00fado da resposta. \u00c9 importante entender o que s\u00e3o as classes HTTPRequest, JesonResponse e HttpResponse. Pois elas ser\u00e3o usadas nas nossas funcoes_request_response.","title":"Backend"},{"location":"backend/#backend","text":"","title":"Backend"},{"location":"backend/#wgsi","text":"O que significa o WGSI? Significa We're Gonna Solve It! Esse ser\u00e1 o nome do nosso protocolinho para comunica\u00e7\u00e3o com servidor! Na verdade, o nome do arquivo deveria ser WSGI, um padr\u00e3o (protocolo) de interface de comunica\u00e7\u00e3o da aplica\u00e7\u00e3o python e o servidor web proposto pela PEP 333 . S\u00f3 que na hora do sono, acabamos digitando WGSI, ao inv\u00e9s de WSGI, e bem, Apesar do Vamos resolver isso! N\u00f3s n\u00e3o vamos resolver isso. Oficialmente, nosso protocolinho de comunica\u00e7\u00e3o com servidor ser\u00e1 conhecido como \"WGSI\", que, \u00e9 claro, ainda significa \"We're Gonna Solve It!\" (Vamos Resolver Isso!). Contudo, vamos apenas deixar assim, est\u00e1 bem? Mas procurem por WSGI! O PEP 333 diz que como tudo come\u00e7a! Tudo precisa come\u00e7ar com uma fun\u00e7\u00e3o (um cham\u00e1vel) que recebe um dicion\u00e1rio com vari\u00e1veis de ambiente e uma outra fun\u00e7\u00e3o. Ela ser\u00e1 respons\u00e1vel pela primeira comunica\u00e7\u00e3o com a web. A nossa fun\u00e7\u00e3o recebe o nome de \"retorna_response(environ, start_response)\". Ao executar o comando 'python3 wgsi.py', server deixa dispon\u00edvel na porta 8080 o acesso para nosso backend. Quando algu\u00e9m acessar essa porta, ent\u00e3o ser\u00e1 executado o retorna_response , terceiro par\u00e2metro da fun\u00e7\u00e3o make_server(). A fun\u00e7\u00e3o retorna_response() \u00e9 a fun\u00e7\u00e3o principal de um servidor WSGI. Ela recebe uma solicita\u00e7\u00e3o do navegador (atrav\u00e9s do par\u00e2metro environ) e retorna uma resposta (atrav\u00e9s do par\u00e2metro start_response). O primeiro passo da fun\u00e7\u00e3o \u00e9 criar uma inst\u00e2ncia de HTTPRequest a partir do dicion\u00e1rio environ. O objeto HTTPRequest representa a solicita\u00e7\u00e3o do navegador. Ele cont\u00e9m informa\u00e7\u00f5es como o m\u00e9todo HTTP, os cabe\u00e7alhos, a URL, os par\u00e2metros de consulta e outras informa\u00e7\u00f5es relacionadas \u00e0 solicita\u00e7\u00e3o. Em seguida, a fun\u00e7\u00e3o chama a fun\u00e7\u00e3o url_match() para encontrar qual view (fun\u00e7\u00e3o que recebe um request e responde um response) deve ser executada para atender \u00e0 solicita\u00e7\u00e3o. A fun\u00e7\u00e3o url_match() recebe a URL da solicita\u00e7\u00e3o como par\u00e2metro (request.path). Se a fun\u00e7\u00e3o url_match() retornar uma fun\u00e7\u00e3o view, a fun\u00e7\u00e3o retorna_response() chama a fun\u00e7\u00e3o view com o objeto HTTPRequest como par\u00e2metro. A fun\u00e7\u00e3o view \u00e9 respons\u00e1vel por gerar a resposta para a solicita\u00e7\u00e3o. Finalmente, a fun\u00e7\u00e3o retorna_response() chama a fun\u00e7\u00e3o start_response() para informar ao servidor que a solicita\u00e7\u00e3o foi processada. A fun\u00e7\u00e3o start_response() recebe o c\u00f3digo de status da resposta e uma lista de cabe\u00e7alhos como par\u00e2metros. O c\u00f3digo de status da resposta indica o resultado da solicita\u00e7\u00e3o. Por exemplo, o c\u00f3digo de status 200 OK indica que a solicita\u00e7\u00e3o foi bem-sucedida. Os cabe\u00e7alhos da resposta fornecem informa\u00e7\u00f5es adicionais sobre a resposta. Por exemplo, o cabe\u00e7alho Content-Type indica o tipo de conte\u00fado da resposta. \u00c9 importante entender o que s\u00e3o as classes HTTPRequest, JesonResponse e HttpResponse. Pois elas ser\u00e3o usadas nas nossas funcoes_request_response.","title":"WGSI"},{"location":"biblioteca/","text":"Como fazer o pull request no local correto. Devido a orienta\u00e7\u00e3o do professor, n\u00e3o vamos poder commitar na MAIN. Dessa forma, vamos fazer uma branch por sprint. Nossa primeira sprint vai ter a branch. S-01/main-primeira-sprint Como se fosse a primeira vez: configurando upstream a) Conectando o reposit\u00f3rio original na upstream \u00c9 preciso entender que seu c\u00f3digo habitar\u00e1, em pelo menos, tr\u00eas arquivos. - Na sua m\u00e1quina, chamada de local. - No seu reposit\u00f3rio remoto. Seu fork. - No reposit\u00f3rio original, upstream Para que todos tenham as modifica\u00e7\u00f5es de todos, o caminho para puxar atualiza\u00e7\u00f5es sempre ser\u00e1 upstream > fork > reposit\u00f3rio local. Av\u00f4 -> pai -> filho. N\u00e3o \u00e9 uma boa ideia puxar modifica\u00e7\u00f5es de av\u00f4 direto para filho, t\u00e1! No seu reposit\u00f3rio local, ser\u00e1 necess\u00e1rio indicar quem ser\u00e1 a upstream, ou seja, a upstream \u00e9 a liga\u00e7\u00e3o direta com projeto original. git remote add upstream https://github.com/ClaraSantosmf/FATEC-API-1-SEMESTRE Agora seu reposit\u00f3rio est\u00e1 dessa forma. git push e git pull enviar\u00e3o as modifica\u00e7\u00f5es para seu fork. git pull upstream vai trazer as informa\u00e7\u00f5es do reposit\u00f3rio original. Mas por que n\u00e3o posso fazer git push upstream? Porque upstream n\u00e3o autoriza pull de reposit\u00f3rio original. Agora, com o comando para listar os nomes das branchs da upstream. git ls-remote Deve haver um retorno desse estilo A partir disso, vamos criar uma branch que ser\u00e1 sincronizada direta com a upstream. Como voc\u00ea j\u00e1 sabe, nossa primeira sprint ser\u00e1 a partir da S-01/main-primeira-sprint b) criando sua branch para copiar a upstream. Voc\u00ea n\u00e3o deve fazer altera\u00e7\u00f5es direto na upstream, ent\u00e3o vamos copia-la! git switch -c S-01/main-primeira-sprint O que isso faz? Cria uma nova branch local chamada S-01/main-primeira-sprint. Faz o checkout daquela branch. Faz o pull das altera\u00e7\u00f5es de origin/S-01/main-primeira-sprint para aquela branch c) Puxando altera\u00e7\u00f5es da upstream. Agora voc\u00ea deve puxar as atualiza\u00e7\u00f5es da upstream. git pull upstream S-01/main-primeira-sprint Agora sua branch trar\u00e1 todas as atualiza\u00e7\u00e3o dessa branch da upstream. \u00c9 a partir dessa branch atualizada, que voc\u00ea deve criar suas branchs! Depois de ter branch s-01 criada! Primeira op\u00e7\u00e3o para sincronizar seu projeto - syncfork Entrou para trabalhar e precisa puxar atualiza\u00e7\u00f5es dos colegas? Simples. Abra seu reposit\u00f3rio no GitHub No seu Reposit\u00f3rio mude para a branch : S-02/main-segunda-sprint Sincronize seu Fork: Abra seu projeto na m\u00e1quina. NO SEU VSCode, no seu projeto! Mude para branch S-02/main-segunda-sprint, abra o terminal e rode o comando git pull \u00c9 poss\u00edvel que nesse passo voc\u00ea tenha que lidar com alguns conflitos. Resolva-os com calma! Agora mude para a branch que esta trabalhando na sua m\u00e1quina, use o comando git merge no terminal: git merge S-02/main-segunda-sprint \u00c9 poss\u00edvel que nesse passo voc\u00ea tenha que lidar com alguns conflitos. Resolva-os com calma! Depois disso, agora a branch que esta trabalhando na sua m\u00e1quina esta sincronizada com as branch S-02/main-segunda-sprint. Seu VSCode vai sugerir que voc\u00ea commite as mudan\u00e7as, e isso \u00e9 importante! git push Outra op\u00e7\u00e3o de sincroniza\u00e7\u00e3o: upstream - sem precisar sincronizar o fork No seu projeto, com comandos apenas do terminal, comece indo para a branch principal da sprint. Nesse exemplo, a S-02! git switch S-02/main-primeira-sprint Rode o comando para trazer as atualiza\u00e7\u00f5es. git pull upstream S-01/main-primeira-sprint Agora mude para sua branch de trabalho. Vou usar a minha como exemplo que \u00e9 a branch \"Santos/implementando-WSGI\" git switch Santos/implementandoW-WSGI E agora o comando de mergear (misturar atualiza\u00e7\u00f5es com seu c\u00f3digo) git merge S-01/main-primeira-sprint Tudo certo e nada errado! Voc\u00ea tem uma branch na sua \u00faltima vers\u00e3o. Pull Request e Code Review. Como fazer boas constribui\u00e7\u00f5es? Passos para contribuir: while projeto == inacabado: 1- Atualize a main 2- Crie sua branch 3- Realize commites at\u00f4micos 4- Realize um push para criar um PR 5- Pe\u00e7a codeReview 6- Fa\u00e7a os reparos necess\u00e1rios no CodeReview 7- Seja aprovado e mergeado O que \u00e9 pull request? Pull Request \u00e9 a nossa forma de contribui\u00e7\u00e3o o projeto. Sugerimos a leitura dessa documenta\u00e7\u00e3o especifica sobre como contribuir em um projeto GitHub. Para algo de consulta r\u00e1pida e explica\u00e7\u00f5es breve para o dia a dia, deixo esse Medium . O que \u00e9 code review? O Code Review \u00e9 um processo no fluxo de desenvolvimento de software. Algu\u00e9m prop\u00f5e altera\u00e7\u00f5es ou cria\u00e7\u00e3o no c\u00f3digo por meio de um pull request (PR) e \u00e9 analisado por outras pessoas. Isso ajuda identificar bugs e melhora a qualidade das implementa\u00e7\u00f5es e compartilhar conhecimento. A responsabilidade de manter o CR em dia \u00e9 de todos. Todos podem fazer e opinar. Boas pr\u00e1ticas \ud83d\udca1 Antes de revisar o c\u00f3digo, tenha como premissa que o autor do **PR** fez o seu melhor em prol de solucionar o problema. Revisor Leia a descri\u00e7\u00e3o do PR, deve estar descrito o problema que a implementa\u00e7\u00e3o se prop\u00f5e resolver. N\u00e3o encontrou na descri\u00e7\u00e3o do PR? Pe\u00e7a para que o autor ajuste isso e dedique um tempo para entender o contexto e as motiva\u00e7\u00f5es das mudan\u00e7as. Fa\u00e7a coment\u00e1rios atrav\u00e9s de observa\u00e7\u00f5es, impactos, requisi\u00e7\u00f5es e perguntas. Exemplos: \u274c \u2639\ufe0f \u2705 \ud83d\ude00 Por qu\u00ea? Observa\u00e7\u00e3o Voc\u00ea est\u00e1 fazendo uma implementa\u00e7\u00e3o errada. Essa implementa\u00e7\u00e3o est\u00e1 repetida em outro contexto e poderia ser reutilizada. $LINK A revis\u00e3o \u00e9 sobre o c\u00f3digo, nunca sobre o autor. Fornecer links, quando poss\u00edvel, de certa forma \u00e9 uma gentileza e ajuda o autor a entender seu ponto de vista. Sugerir r\u00e1pidas edi\u00e7\u00f5es pode ajudar tamb\u00e9m. Impacto Essa implementa\u00e7\u00e3o n\u00e3o est\u00e1 clara. Essa implementa\u00e7\u00e3o n\u00e3o deixa claro o objetivo do m\u00e9todo por X motivo. Explicar o impacto permite que o autor entenda a motiva\u00e7\u00e3o da sua observa\u00e7\u00e3o e n\u00e3o desvaloriza o trabalho que j\u00e1 foi feito. Requisi\u00e7\u00e3o - Use o padr\u00e3o X. Fa\u00e7a Y. Para esse cen\u00e1rio eu sugiro fazer/usar X, por N motivos Um ponto de vista mais pessoal se aproxima da forma com que conversamos no dia a dia, afirma\u00e7\u00f5es no imperativo podem soar rudes. Explicar o motivo da requisi\u00e7\u00e3o encoraja a colabora\u00e7\u00e3o. Pergunta Por que voc\u00ea n\u00e3o faz X? O que voc\u00ea acha de fazer X? Pode ajudar em Y. Por meio das respostas, podemos entender melhor a decis\u00e3o para certo ponto do c\u00f3digo. Entenda que existem diferentes solu\u00e7\u00f5es para o mesmo problema: Nem sempre a melhor solu\u00e7\u00e3o \u00e9 a que voc\u00ea esta propondo; Com o time, chegue na melhor solu\u00e7\u00e3o para o problema com o atual conhecimento deles; Tenha claro a distin\u00e7\u00e3o entre boas pr\u00e1ticas e gosto pessoal ; Deixe claro quais coment\u00e1rios s\u00e3o \u201cbloqueantes\u201d (n\u00e3o vai subir sem que aquilo seja ajustado) e voc\u00ea espera que haja uma altera\u00e7\u00e3o significativa. Se sua revis\u00e3o possui apenas pequenos apontamentos que podem ser facilmente resolvidos, considere aprovar a solicita\u00e7\u00e3o e orientar o autor sobre isso nos coment\u00e1rios, de modo que ele n\u00e3o precise aguardar novamente. Se voc\u00ea acredita que PR est\u00e1 muito grande, explique o motivo e incentive o autor a dividi-lo em menores partes. N\u00e3o foque em deixar o PR excelente (A+), mas em melhor\u00e1-lo a ponto de ficar MVP e planeje evolu\u00e7\u00f5es futuras. Antes de enviar o coment\u00e1rio de CR se pergunte: A afirma\u00e7\u00e3o \u00e9 verdadeira? O coment\u00e1rio est\u00e1 agregando valor para o PR (principalmente se estamos contribuindo com o conhecimento do time e pessoa que abriu PR)? Estou sendo gentil? Autor Assuma como premissa que o revisor est\u00e1 querendo contribuir e tenha humildade para ouvir sobre o seu trabalho. Voc\u00ea e o revisor s\u00e3o do mesmo time . Voc\u00ea deve \u2705 Dar o m\u00e1ximo de contexto ao abrir um PR, lembre-se que o revisor n\u00e3o tem tanto contexto quanto voc\u00ea. Escreva uma boa descri\u00e7\u00e3o ou deixe um link nela. Encarar a revis\u00e3o como aprendizado. Entender que somos sempre enviesados pelo nosso pr\u00f3prio c\u00f3digo. Estar aberto a opini\u00f5es externas: seu c\u00f3digo n\u00e3o \u00e9 seu \"bichinho de estima\u00e7\u00e3o\". Entender que \u00e9 normal ter bugs, implementa\u00e7\u00f5es melhores ou esquecer de algum detalhe. N\u00e3o deve \u274c Encarar coment\u00e1rios como cr\u00edtica pessoal; Levar cr\u00edticas para o lado pessoal, voc\u00ea n\u00e3o \u00e9 o seu c\u00f3digo ; C\u00f3digo Simples \u00e9 melhor do que complexo: cuidado com over-engineering (implemente o que voc\u00ea realmente precisa, n\u00e3o tente adivinhar o que voc\u00ea vai precisar no futuro); Antes de aplicar um design pattern , tenha claro qual problema ele resolve e qual ele n\u00e3o resolve, para n\u00e3o cair em ~~anti-pattern~~ sem saber ( \ud83d\udcd6 livro ) ; Checklist Ao revisar um c\u00f3digo, \u00e9 bom (para o autor e para o revisor) ter um checklist do que precisa ser avaliado. Conferir todos os aspectos do c\u00f3digo de uma vez pode ser exaustivo e propenso a falhas, portanto \u00e9 bom atentar-se a um t\u00f3pico e validar todo conte\u00fado sob aquela \u00f3tica. [ ] Entendi o problema? [ ] Entendi o que o c\u00f3digo est\u00e1 fazendo? [ ] O c\u00f3digo atende todos os requisitos de implementa\u00e7\u00e3o? [ ] A implementa\u00e7\u00e3o resolve o problema apresentado ou est\u00e1 claro como mediremos isso? [ ] A descri\u00e7\u00e3o da PR/commit est\u00e1 conforme a implementa\u00e7\u00e3o feita? [ ] Aten\u00e7\u00e3o a sintaxe, n\u00e3o tem nenhum code smells/ ind\u00edcios de um problema mais profundo? [ ] As exce\u00e7\u00f5es necess\u00e1rias foram tratadas? [ ] Alguma documenta\u00e7\u00e3o adicional precisa ser feita? Refer\u00eancias Code Review Guidelines for Humans How to Make Good Code Reviews Better - Stack Overflow Blog Boas pr\u00e1ticas de reviews Como configurar o projeto? Precisamos rodar nosso projeto na nossa m\u00e1quina! Nisso, vamos configura-la de forma a conseguir exercutar o PBLTeX! Virtualenvs A maneira mais f\u00e1cil de todos terem as mesmas configura\u00e7\u00f5es do projeto na m\u00e1quina \u00e9 por meio de uma virtualenv. Aplica\u00e7\u00f5es em Python normalmente usam pacotes e m\u00f3dulos que n\u00e3o v\u00eam como parte da instala\u00e7\u00e3o padr\u00e3o. Aplica\u00e7\u00f5es \u00e0s vezes necessitam uma vers\u00e3o espec\u00edfica de uma biblioteca, porque ela requer que algum problema em particular tenha sido consertado ou foi escrita utilizando-se de uma vers\u00e3o obsoleta da interface da biblioteca. A solu\u00e7\u00e3o para este problema \u00e9 criar um ambiente virtual, uma \u00e1rvore de diret\u00f3rios que cont\u00e9m uma instala\u00e7\u00e3o Python para uma vers\u00e3o particular do Python, al\u00e9m de uma s\u00e9rie de pacotes adicionais. Virtualenvs - docs Instale o pyenv Use o pyenv para gerenciar as vers\u00f5es de Python e seus virtualenvs. Para instalar ele, use o pyenv-installer . No reposit\u00f3rio tem as instru\u00e7\u00f5es detalhadas, mas talvez seja s\u00f3 isso aqui: curl https://pyenv.run | bash Reinicie o terminal e voc\u00ea j\u00e1 deve conseguir usar o pyenv. # Instale uma vers\u00e3o do 3.11.x. pyenv install 3.11.0 # Crie um virtualenv buser com a vers\u00e3o que voc\u00ea acabou de instalar. pyenv virtualenv 3.11.0 PBLTeX O arquivo .python-version j\u00e1 diz para o pyenv usar o env PBLTeX quando estiver na pasta do projeto. Ou seja, nosso ambiente vai ser sempre ativado automaticamente. Mas caso precise ativa-lo, sempre que quiser, pode fazer: pyenv activate PBLTeX Instale as depend\u00eancias com os seguintes comandos: pip install -r requirements.txt Rode o projeto com: python3 wgsi.py Nesse momento, nosso servidor est\u00e1 fornecendo informa\u00e7\u00f5es na porta :8080 Por\u00e9m, nosso frontend estar\u00e1 na porta:5500 Ent\u00e3o, para olhar o backend : http://127.0.0.1:8080/ Para olhar para o frontend http://127.0.0.1:5500/ Diferen\u00e7a entre JSON e CSV JSON (JavaScript Object Notation): O JSON \u00e9 um formato de dados que \u00e9 comumente usado para trocar informa\u00e7\u00f5es estruturadas entre sistemas. Ele \u00e9 f\u00e1cil de ler e escrever tanto para humanos quanto para m\u00e1quinas. Um arquivo JSON possui as seguintes caracter\u00edsticas: Sintaxe : O JSON \u00e9 baseado em pares de chave-valor. Os dados s\u00e3o armazenados em um formato semelhante a um dicion\u00e1rio em Python ou um objeto em JavaScript. A chave \u00e9 sempre uma string, seguida por dois pontos ( : ), e o valor pode ser de qualquer tipo de dado suportado pelo JSON (string, n\u00famero, booleano, array, objeto, null). { \"nome\": \"Jo\u00e3o\", \"idade\": 30, \"casado\": true, \"interesses\": [\"m\u00fasica\", \"viagem\", \"esportes\"], \"endere\u00e7o\": { \"rua\": \"123 Main Street\", \"cidade\": \"S\u00e3o Paulo\", \"estado\": \"SP\" } } Uso: O JSON \u00e9 frequentemente usado para configurar aplicativos, transmitir dados pela web e armazenar informa\u00e7\u00f5es estruturadas em arquivos. Vantagens : Suporta dados aninhados e estruturas complexas. Pode representar diferentes tipos de dados, como strings, n\u00fameros, listas, objetos, etc. \u00c9 f\u00e1cil de entender e ler. \u00c9 usado para configura\u00e7\u00f5es de aplicativos e troca de dados entre sistemas. Desvantagens : Pode ser menos eficiente em termos de espa\u00e7o quando comparado ao CSV para grandes conjuntos de dados tabulares simples. CSV (Comma-Separated Values): O CSV \u00e9 um formato simples para armazenar dados em formato tabular, onde as colunas s\u00e3o separadas por v\u00edrgulas e as linhas s\u00e3o separadas por quebras de linha. Cada linha representa um registro e cada campo (valor) \u00e9 separado por uma v\u00edrgula. Sintaxe : Os valores s\u00e3o separados por v\u00edrgulas (da\u00ed o nome \"Comma-Separated Values\"). Pode haver uma linha de cabe\u00e7alho que define os nomes das colunas. Nome,Idade,Email Sara,30,saranahra@hotmail.com Caio,33,caiopalma@gmail.com Uso: O CSV \u00e9 comumente utilizado para armazenar e compartilhar dados tabulares, como planilhas ou conjuntos de dados estruturados. Ele \u00e9 amplamente suportado por planilhas e aplicativos de banco de dados. Vantagens : \u00c9 eficiente para grandes conjuntos de dados tabulares simples. \u00c9 f\u00e1cil de ser lido e editado em qualquer editor de texto. Amplamente suportado por planilhas e bancos de dados. Desvantagens : N\u00e3o suporta estruturas de dados complexas diretamente (como objetos aninhados). Resumo: A escolha entre JSON e CSV depender\u00e1 do tipo de dados que voc\u00ea est\u00e1 manipulando e das necessidades espec\u00edficas do seu aplicativo ou uso. JSON \u00e9 mais adequado para dados complexos e aninhados, enquanto CSV \u00e9 excelente para dados tabulares simples e efici\u00eancia de armazenamento. https://docs.python.org/3/library/csv.html https://www.json.org/json-en.html Comandos para executar o clone no git Passo 1: pegando o link do reposit\u00f3rio Ir no reposit\u00f3rio do GitHub e clicar em \"code\", depois https e copiar o link. Passo 2: criando uma pasta para o reposit\u00f3rio Ir no terminar (Windows Power Shell) e criar uma pasta: mkdir Pasta cd Pasta Passo 3: clonando o reposit\u00f3rio e abrindo no VSCode git clone copiar-o-link-obtido-do-github cd nome-do-projeto git fetch origin git checkout -b nome-do-projeto origin/nome-do-projeto git branch -a git pull code . Passo 4: comitando no reposit\u00f3rio ap\u00f3s as altera\u00e7\u00f5es Ap\u00f3s fazer as altera\u00e7\u00f5es no c\u00f3digo seguir os proximos passos para comitar: git add . commit -m adicionar-novo-arquivo git push","title":"Biblioteca"},{"location":"biblioteca/#como-fazer-o-pull-request-no-local-correto","text":"Devido a orienta\u00e7\u00e3o do professor, n\u00e3o vamos poder commitar na MAIN. Dessa forma, vamos fazer uma branch por sprint. Nossa primeira sprint vai ter a branch. S-01/main-primeira-sprint","title":"Como fazer o pull request no local correto."},{"location":"biblioteca/#como-se-fosse-a-primeira-vez-configurando-upstream","text":"a) Conectando o reposit\u00f3rio original na upstream \u00c9 preciso entender que seu c\u00f3digo habitar\u00e1, em pelo menos, tr\u00eas arquivos. - Na sua m\u00e1quina, chamada de local. - No seu reposit\u00f3rio remoto. Seu fork. - No reposit\u00f3rio original, upstream Para que todos tenham as modifica\u00e7\u00f5es de todos, o caminho para puxar atualiza\u00e7\u00f5es sempre ser\u00e1 upstream > fork > reposit\u00f3rio local. Av\u00f4 -> pai -> filho. N\u00e3o \u00e9 uma boa ideia puxar modifica\u00e7\u00f5es de av\u00f4 direto para filho, t\u00e1! No seu reposit\u00f3rio local, ser\u00e1 necess\u00e1rio indicar quem ser\u00e1 a upstream, ou seja, a upstream \u00e9 a liga\u00e7\u00e3o direta com projeto original. git remote add upstream https://github.com/ClaraSantosmf/FATEC-API-1-SEMESTRE Agora seu reposit\u00f3rio est\u00e1 dessa forma. git push e git pull enviar\u00e3o as modifica\u00e7\u00f5es para seu fork. git pull upstream vai trazer as informa\u00e7\u00f5es do reposit\u00f3rio original. Mas por que n\u00e3o posso fazer git push upstream? Porque upstream n\u00e3o autoriza pull de reposit\u00f3rio original. Agora, com o comando para listar os nomes das branchs da upstream. git ls-remote Deve haver um retorno desse estilo A partir disso, vamos criar uma branch que ser\u00e1 sincronizada direta com a upstream. Como voc\u00ea j\u00e1 sabe, nossa primeira sprint ser\u00e1 a partir da S-01/main-primeira-sprint b) criando sua branch para copiar a upstream. Voc\u00ea n\u00e3o deve fazer altera\u00e7\u00f5es direto na upstream, ent\u00e3o vamos copia-la! git switch -c S-01/main-primeira-sprint O que isso faz? Cria uma nova branch local chamada S-01/main-primeira-sprint. Faz o checkout daquela branch. Faz o pull das altera\u00e7\u00f5es de origin/S-01/main-primeira-sprint para aquela branch c) Puxando altera\u00e7\u00f5es da upstream. Agora voc\u00ea deve puxar as atualiza\u00e7\u00f5es da upstream. git pull upstream S-01/main-primeira-sprint Agora sua branch trar\u00e1 todas as atualiza\u00e7\u00e3o dessa branch da upstream. \u00c9 a partir dessa branch atualizada, que voc\u00ea deve criar suas branchs!","title":"Como se fosse a primeira vez: configurando upstream"},{"location":"biblioteca/#depois-de-ter-branch-s-01-criada","text":"Primeira op\u00e7\u00e3o para sincronizar seu projeto - syncfork Entrou para trabalhar e precisa puxar atualiza\u00e7\u00f5es dos colegas? Simples. Abra seu reposit\u00f3rio no GitHub No seu Reposit\u00f3rio mude para a branch : S-02/main-segunda-sprint Sincronize seu Fork: Abra seu projeto na m\u00e1quina. NO SEU VSCode, no seu projeto! Mude para branch S-02/main-segunda-sprint, abra o terminal e rode o comando git pull \u00c9 poss\u00edvel que nesse passo voc\u00ea tenha que lidar com alguns conflitos. Resolva-os com calma! Agora mude para a branch que esta trabalhando na sua m\u00e1quina, use o comando git merge no terminal: git merge S-02/main-segunda-sprint \u00c9 poss\u00edvel que nesse passo voc\u00ea tenha que lidar com alguns conflitos. Resolva-os com calma! Depois disso, agora a branch que esta trabalhando na sua m\u00e1quina esta sincronizada com as branch S-02/main-segunda-sprint. Seu VSCode vai sugerir que voc\u00ea commite as mudan\u00e7as, e isso \u00e9 importante! git push","title":"Depois de ter branch s-01 criada!"},{"location":"biblioteca/#outra-opcao-de-sincronizacao-upstream-sem-precisar-sincronizar-o-fork","text":"No seu projeto, com comandos apenas do terminal, comece indo para a branch principal da sprint. Nesse exemplo, a S-02! git switch S-02/main-primeira-sprint Rode o comando para trazer as atualiza\u00e7\u00f5es. git pull upstream S-01/main-primeira-sprint Agora mude para sua branch de trabalho. Vou usar a minha como exemplo que \u00e9 a branch \"Santos/implementando-WSGI\" git switch Santos/implementandoW-WSGI E agora o comando de mergear (misturar atualiza\u00e7\u00f5es com seu c\u00f3digo) git merge S-01/main-primeira-sprint Tudo certo e nada errado! Voc\u00ea tem uma branch na sua \u00faltima vers\u00e3o.","title":"Outra op\u00e7\u00e3o de sincroniza\u00e7\u00e3o: upstream - sem precisar sincronizar o fork"},{"location":"biblioteca/#pull-request-e-code-review-como-fazer-boas-constribuicoes","text":"Passos para contribuir: while projeto == inacabado: 1- Atualize a main 2- Crie sua branch 3- Realize commites at\u00f4micos 4- Realize um push para criar um PR 5- Pe\u00e7a codeReview 6- Fa\u00e7a os reparos necess\u00e1rios no CodeReview 7- Seja aprovado e mergeado","title":"Pull Request e Code Review. Como fazer boas constribui\u00e7\u00f5es?"},{"location":"biblioteca/#o-que-e-pull-request","text":"Pull Request \u00e9 a nossa forma de contribui\u00e7\u00e3o o projeto. Sugerimos a leitura dessa documenta\u00e7\u00e3o especifica sobre como contribuir em um projeto GitHub. Para algo de consulta r\u00e1pida e explica\u00e7\u00f5es breve para o dia a dia, deixo esse Medium .","title":"O que \u00e9 pull request?"},{"location":"biblioteca/#o-que-e-code-review","text":"O Code Review \u00e9 um processo no fluxo de desenvolvimento de software. Algu\u00e9m prop\u00f5e altera\u00e7\u00f5es ou cria\u00e7\u00e3o no c\u00f3digo por meio de um pull request (PR) e \u00e9 analisado por outras pessoas. Isso ajuda identificar bugs e melhora a qualidade das implementa\u00e7\u00f5es e compartilhar conhecimento. A responsabilidade de manter o CR em dia \u00e9 de todos. Todos podem fazer e opinar.","title":"O que \u00e9 code review?"},{"location":"biblioteca/#boas-praticas","text":"\ud83d\udca1 Antes de revisar o c\u00f3digo, tenha como premissa que o autor do **PR** fez o seu melhor em prol de solucionar o problema.","title":"Boas pr\u00e1ticas"},{"location":"biblioteca/#revisor","text":"Leia a descri\u00e7\u00e3o do PR, deve estar descrito o problema que a implementa\u00e7\u00e3o se prop\u00f5e resolver. N\u00e3o encontrou na descri\u00e7\u00e3o do PR? Pe\u00e7a para que o autor ajuste isso e dedique um tempo para entender o contexto e as motiva\u00e7\u00f5es das mudan\u00e7as. Fa\u00e7a coment\u00e1rios atrav\u00e9s de observa\u00e7\u00f5es, impactos, requisi\u00e7\u00f5es e perguntas. Exemplos: \u274c \u2639\ufe0f \u2705 \ud83d\ude00 Por qu\u00ea? Observa\u00e7\u00e3o Voc\u00ea est\u00e1 fazendo uma implementa\u00e7\u00e3o errada. Essa implementa\u00e7\u00e3o est\u00e1 repetida em outro contexto e poderia ser reutilizada. $LINK A revis\u00e3o \u00e9 sobre o c\u00f3digo, nunca sobre o autor. Fornecer links, quando poss\u00edvel, de certa forma \u00e9 uma gentileza e ajuda o autor a entender seu ponto de vista. Sugerir r\u00e1pidas edi\u00e7\u00f5es pode ajudar tamb\u00e9m. Impacto Essa implementa\u00e7\u00e3o n\u00e3o est\u00e1 clara. Essa implementa\u00e7\u00e3o n\u00e3o deixa claro o objetivo do m\u00e9todo por X motivo. Explicar o impacto permite que o autor entenda a motiva\u00e7\u00e3o da sua observa\u00e7\u00e3o e n\u00e3o desvaloriza o trabalho que j\u00e1 foi feito. Requisi\u00e7\u00e3o - Use o padr\u00e3o X. Fa\u00e7a Y. Para esse cen\u00e1rio eu sugiro fazer/usar X, por N motivos Um ponto de vista mais pessoal se aproxima da forma com que conversamos no dia a dia, afirma\u00e7\u00f5es no imperativo podem soar rudes. Explicar o motivo da requisi\u00e7\u00e3o encoraja a colabora\u00e7\u00e3o. Pergunta Por que voc\u00ea n\u00e3o faz X? O que voc\u00ea acha de fazer X? Pode ajudar em Y. Por meio das respostas, podemos entender melhor a decis\u00e3o para certo ponto do c\u00f3digo. Entenda que existem diferentes solu\u00e7\u00f5es para o mesmo problema: Nem sempre a melhor solu\u00e7\u00e3o \u00e9 a que voc\u00ea esta propondo; Com o time, chegue na melhor solu\u00e7\u00e3o para o problema com o atual conhecimento deles; Tenha claro a distin\u00e7\u00e3o entre boas pr\u00e1ticas e gosto pessoal ; Deixe claro quais coment\u00e1rios s\u00e3o \u201cbloqueantes\u201d (n\u00e3o vai subir sem que aquilo seja ajustado) e voc\u00ea espera que haja uma altera\u00e7\u00e3o significativa. Se sua revis\u00e3o possui apenas pequenos apontamentos que podem ser facilmente resolvidos, considere aprovar a solicita\u00e7\u00e3o e orientar o autor sobre isso nos coment\u00e1rios, de modo que ele n\u00e3o precise aguardar novamente. Se voc\u00ea acredita que PR est\u00e1 muito grande, explique o motivo e incentive o autor a dividi-lo em menores partes. N\u00e3o foque em deixar o PR excelente (A+), mas em melhor\u00e1-lo a ponto de ficar MVP e planeje evolu\u00e7\u00f5es futuras. Antes de enviar o coment\u00e1rio de CR se pergunte: A afirma\u00e7\u00e3o \u00e9 verdadeira? O coment\u00e1rio est\u00e1 agregando valor para o PR (principalmente se estamos contribuindo com o conhecimento do time e pessoa que abriu PR)? Estou sendo gentil?","title":"Revisor"},{"location":"biblioteca/#autor","text":"Assuma como premissa que o revisor est\u00e1 querendo contribuir e tenha humildade para ouvir sobre o seu trabalho. Voc\u00ea e o revisor s\u00e3o do mesmo time .","title":"Autor"},{"location":"biblioteca/#voce-deve","text":"Dar o m\u00e1ximo de contexto ao abrir um PR, lembre-se que o revisor n\u00e3o tem tanto contexto quanto voc\u00ea. Escreva uma boa descri\u00e7\u00e3o ou deixe um link nela. Encarar a revis\u00e3o como aprendizado. Entender que somos sempre enviesados pelo nosso pr\u00f3prio c\u00f3digo. Estar aberto a opini\u00f5es externas: seu c\u00f3digo n\u00e3o \u00e9 seu \"bichinho de estima\u00e7\u00e3o\". Entender que \u00e9 normal ter bugs, implementa\u00e7\u00f5es melhores ou esquecer de algum detalhe.","title":"Voc\u00ea deve \u2705"},{"location":"biblioteca/#nao-deve","text":"Encarar coment\u00e1rios como cr\u00edtica pessoal; Levar cr\u00edticas para o lado pessoal, voc\u00ea n\u00e3o \u00e9 o seu c\u00f3digo ;","title":"N\u00e3o deve \u274c"},{"location":"biblioteca/#codigo","text":"Simples \u00e9 melhor do que complexo: cuidado com over-engineering (implemente o que voc\u00ea realmente precisa, n\u00e3o tente adivinhar o que voc\u00ea vai precisar no futuro); Antes de aplicar um design pattern , tenha claro qual problema ele resolve e qual ele n\u00e3o resolve, para n\u00e3o cair em ~~anti-pattern~~ sem saber ( \ud83d\udcd6 livro ) ;","title":"C\u00f3digo"},{"location":"biblioteca/#checklist","text":"Ao revisar um c\u00f3digo, \u00e9 bom (para o autor e para o revisor) ter um checklist do que precisa ser avaliado. Conferir todos os aspectos do c\u00f3digo de uma vez pode ser exaustivo e propenso a falhas, portanto \u00e9 bom atentar-se a um t\u00f3pico e validar todo conte\u00fado sob aquela \u00f3tica. [ ] Entendi o problema? [ ] Entendi o que o c\u00f3digo est\u00e1 fazendo? [ ] O c\u00f3digo atende todos os requisitos de implementa\u00e7\u00e3o? [ ] A implementa\u00e7\u00e3o resolve o problema apresentado ou est\u00e1 claro como mediremos isso? [ ] A descri\u00e7\u00e3o da PR/commit est\u00e1 conforme a implementa\u00e7\u00e3o feita? [ ] Aten\u00e7\u00e3o a sintaxe, n\u00e3o tem nenhum code smells/ ind\u00edcios de um problema mais profundo? [ ] As exce\u00e7\u00f5es necess\u00e1rias foram tratadas? [ ] Alguma documenta\u00e7\u00e3o adicional precisa ser feita?","title":"Checklist"},{"location":"biblioteca/#referencias","text":"Code Review Guidelines for Humans How to Make Good Code Reviews Better - Stack Overflow Blog Boas pr\u00e1ticas de reviews","title":"Refer\u00eancias"},{"location":"biblioteca/#como-configurar-o-projeto","text":"Precisamos rodar nosso projeto na nossa m\u00e1quina! Nisso, vamos configura-la de forma a conseguir exercutar o PBLTeX!","title":"Como configurar o projeto?"},{"location":"biblioteca/#virtualenvs","text":"A maneira mais f\u00e1cil de todos terem as mesmas configura\u00e7\u00f5es do projeto na m\u00e1quina \u00e9 por meio de uma virtualenv. Aplica\u00e7\u00f5es em Python normalmente usam pacotes e m\u00f3dulos que n\u00e3o v\u00eam como parte da instala\u00e7\u00e3o padr\u00e3o. Aplica\u00e7\u00f5es \u00e0s vezes necessitam uma vers\u00e3o espec\u00edfica de uma biblioteca, porque ela requer que algum problema em particular tenha sido consertado ou foi escrita utilizando-se de uma vers\u00e3o obsoleta da interface da biblioteca. A solu\u00e7\u00e3o para este problema \u00e9 criar um ambiente virtual, uma \u00e1rvore de diret\u00f3rios que cont\u00e9m uma instala\u00e7\u00e3o Python para uma vers\u00e3o particular do Python, al\u00e9m de uma s\u00e9rie de pacotes adicionais. Virtualenvs - docs","title":"Virtualenvs"},{"location":"biblioteca/#instale-o-pyenv","text":"Use o pyenv para gerenciar as vers\u00f5es de Python e seus virtualenvs. Para instalar ele, use o pyenv-installer . No reposit\u00f3rio tem as instru\u00e7\u00f5es detalhadas, mas talvez seja s\u00f3 isso aqui: curl https://pyenv.run | bash Reinicie o terminal e voc\u00ea j\u00e1 deve conseguir usar o pyenv. # Instale uma vers\u00e3o do 3.11.x. pyenv install 3.11.0 # Crie um virtualenv buser com a vers\u00e3o que voc\u00ea acabou de instalar. pyenv virtualenv 3.11.0 PBLTeX O arquivo .python-version j\u00e1 diz para o pyenv usar o env PBLTeX quando estiver na pasta do projeto. Ou seja, nosso ambiente vai ser sempre ativado automaticamente. Mas caso precise ativa-lo, sempre que quiser, pode fazer: pyenv activate PBLTeX Instale as depend\u00eancias com os seguintes comandos: pip install -r requirements.txt Rode o projeto com: python3 wgsi.py Nesse momento, nosso servidor est\u00e1 fornecendo informa\u00e7\u00f5es na porta :8080 Por\u00e9m, nosso frontend estar\u00e1 na porta:5500 Ent\u00e3o, para olhar o backend : http://127.0.0.1:8080/ Para olhar para o frontend http://127.0.0.1:5500/","title":"Instale o pyenv"},{"location":"biblioteca/#diferenca-entre-json-e-csv","text":"JSON (JavaScript Object Notation): O JSON \u00e9 um formato de dados que \u00e9 comumente usado para trocar informa\u00e7\u00f5es estruturadas entre sistemas. Ele \u00e9 f\u00e1cil de ler e escrever tanto para humanos quanto para m\u00e1quinas. Um arquivo JSON possui as seguintes caracter\u00edsticas: Sintaxe : O JSON \u00e9 baseado em pares de chave-valor. Os dados s\u00e3o armazenados em um formato semelhante a um dicion\u00e1rio em Python ou um objeto em JavaScript. A chave \u00e9 sempre uma string, seguida por dois pontos ( : ), e o valor pode ser de qualquer tipo de dado suportado pelo JSON (string, n\u00famero, booleano, array, objeto, null). { \"nome\": \"Jo\u00e3o\", \"idade\": 30, \"casado\": true, \"interesses\": [\"m\u00fasica\", \"viagem\", \"esportes\"], \"endere\u00e7o\": { \"rua\": \"123 Main Street\", \"cidade\": \"S\u00e3o Paulo\", \"estado\": \"SP\" } } Uso: O JSON \u00e9 frequentemente usado para configurar aplicativos, transmitir dados pela web e armazenar informa\u00e7\u00f5es estruturadas em arquivos. Vantagens : Suporta dados aninhados e estruturas complexas. Pode representar diferentes tipos de dados, como strings, n\u00fameros, listas, objetos, etc. \u00c9 f\u00e1cil de entender e ler. \u00c9 usado para configura\u00e7\u00f5es de aplicativos e troca de dados entre sistemas. Desvantagens : Pode ser menos eficiente em termos de espa\u00e7o quando comparado ao CSV para grandes conjuntos de dados tabulares simples. CSV (Comma-Separated Values): O CSV \u00e9 um formato simples para armazenar dados em formato tabular, onde as colunas s\u00e3o separadas por v\u00edrgulas e as linhas s\u00e3o separadas por quebras de linha. Cada linha representa um registro e cada campo (valor) \u00e9 separado por uma v\u00edrgula. Sintaxe : Os valores s\u00e3o separados por v\u00edrgulas (da\u00ed o nome \"Comma-Separated Values\"). Pode haver uma linha de cabe\u00e7alho que define os nomes das colunas. Nome,Idade,Email Sara,30,saranahra@hotmail.com Caio,33,caiopalma@gmail.com Uso: O CSV \u00e9 comumente utilizado para armazenar e compartilhar dados tabulares, como planilhas ou conjuntos de dados estruturados. Ele \u00e9 amplamente suportado por planilhas e aplicativos de banco de dados. Vantagens : \u00c9 eficiente para grandes conjuntos de dados tabulares simples. \u00c9 f\u00e1cil de ser lido e editado em qualquer editor de texto. Amplamente suportado por planilhas e bancos de dados. Desvantagens : N\u00e3o suporta estruturas de dados complexas diretamente (como objetos aninhados). Resumo: A escolha entre JSON e CSV depender\u00e1 do tipo de dados que voc\u00ea est\u00e1 manipulando e das necessidades espec\u00edficas do seu aplicativo ou uso. JSON \u00e9 mais adequado para dados complexos e aninhados, enquanto CSV \u00e9 excelente para dados tabulares simples e efici\u00eancia de armazenamento. https://docs.python.org/3/library/csv.html https://www.json.org/json-en.html","title":"Diferen\u00e7a entre JSON e CSV"},{"location":"biblioteca/#comandos-para-executar-o-clone-no-git","text":"","title":"Comandos para executar o clone no git"},{"location":"biblioteca/#passo-1-pegando-o-link-do-repositorio","text":"Ir no reposit\u00f3rio do GitHub e clicar em \"code\", depois https e copiar o link.","title":"Passo 1: pegando o link do reposit\u00f3rio"},{"location":"biblioteca/#passo-2-criando-uma-pasta-para-o-repositorio","text":"Ir no terminar (Windows Power Shell) e criar uma pasta: mkdir Pasta cd Pasta","title":"Passo 2: criando uma pasta para o reposit\u00f3rio"},{"location":"biblioteca/#passo-3-clonando-o-repositorio-e-abrindo-no-vscode","text":"git clone copiar-o-link-obtido-do-github cd nome-do-projeto git fetch origin git checkout -b nome-do-projeto origin/nome-do-projeto git branch -a git pull code .","title":"Passo 3: clonando o reposit\u00f3rio e abrindo no VSCode"},{"location":"biblioteca/#passo-4-comitando-no-repositorio-apos-as-alteracoes","text":"Ap\u00f3s fazer as altera\u00e7\u00f5es no c\u00f3digo seguir os proximos passos para comitar: git add . commit -m adicionar-novo-arquivo git push","title":"Passo 4: comitando no reposit\u00f3rio ap\u00f3s as altera\u00e7\u00f5es"},{"location":"frontend/","text":"Aqui vamos discutir e explicar nosso frontend! Para dar no\u00e7\u00e3o do nosso projeto, n\u00f3s desenhamos todas as telas que imaginamos ser necess\u00e1rias a partir do nosso backlog inicial e os requisitos. Wireframe e fluxos do produto \u00c9pico 1: Exporta\u00e7\u00e3o de Dados Tela: Index.html com bot\u00e3o para gerar relat\u00f3rios, bot\u00e3o para exportar dados, e bot\u00f5es para acessar todas as funcionalidades do sistema. \u00c9pico 2: Gerenciamento de Turmas Telas: gerenciamento_turmas.html (Listagem de turmas), com bot\u00e3o para exclus\u00e3o de turmas. criar_turma.html (Cria\u00e7\u00e3o de turma) editar_turmas.html (Edi\u00e7\u00e3o de turma) \u00c9pico 3: Gerenciamento de Grupos Telas: visualizacao_grupos.html (Listagem de grupos), com bot\u00e3o para exclus\u00e3o de grupo. criar_grupo.html (Cria\u00e7\u00e3o de grupos) editar_grupos.html (Edi\u00e7\u00e3o de grupos) \u00c9pico 4: Gerenciamento de alunos. Telas: gerenciamento_alunos.html (Listagem de alunos), com bot\u00e3o para exclus\u00e3o de alunos. adicionar_aluno.html (Cria\u00e7\u00e3o de alunos) edicao_alunos.html (Edi\u00e7\u00e3o de alunos) \u00c9pico 5: Gerenciamento de Ciclos de Entrega e Scores Tela: gerenciamento_ciclos.html (Listagem de notas dos alunos), com bot\u00e3o para exclus\u00e3o de notas. editar_notas.html adicionar_notas.html \u00c9pico 6: Configura\u00e7\u00f5es Globais Tela: gerenciamento_global.html (Listagem e edi\u00e7\u00e3o de par\u00e2metros globais), com bot\u00e3o para exclus\u00e3o de configura\u00e7\u00f5es globais, que, cuidado, vai excluir a turma inteira. editar_gerenciamento_global.html Estiliza\u00e7\u00e3o dos Componentes CSS CLASSLESS \u00e9 um stylesheet que n\u00e3o define classes que necessitem adicionar ao seus elementos HTML para estiliz\u00e1-los. Como resultado voc\u00ea adiciona o style a qualquer plain-HTML s\u00f3 linkando o stylesheet. Dessa maneira o desenvolvimento fica mais r\u00e1pido e fluido de maneira que fica mais f\u00e1cil construir as tarefas que entregar\u00e3o valor ao cliente. Ele funciona importando um stylesheet j\u00e1 pronto que j\u00e1 possui o estilo da maioria dos elementos HTML estilizados. No nosso projeto estamos utilizando o Water.css que \u00e9 uma cole\u00e7\u00e3o de estilos que v\u00e3o aplicar os conceitos acima no nosso projeto. Como funciona? o Water css funciona importando essa linha de c\u00f3digo no head do html: <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/water.css@2/out/light.css\"> Logo abaixo essa linha temos outra linha que \u00e9 a seguinte: <link rel=\"stylesheet\" href=\"style/custom.css\"> Essa linha \u00e9 importante tamb\u00e9m, pois ela link um .CSS nosso que vai servir para a gente alterar qualquer css que a gente ache necess\u00e1rio. \u26a0\ufe0f Isso quer dizer que a gente tem de importar isso em todas as p\u00e1ginas .HTML? SIM, se n\u00e3o o estilo n\u00e3o ser\u00e1 aplicado O water \u00e9 bom pois tem a maioria dos elementos j\u00e1 cobertos, mas sempre pode ter um que ainda n\u00e3o foi feito no water ou que a gente simplesmente n\u00e3o gostou. Outra coisa importante, qualquer coisa que a gente adicionar no custom.css vai sobrepor o water. Sobre o custom.css Na doc do water temos essas vari\u00e1veis poss\u00edveis de alterar: :root { --background-body: #fff; --background: #efefef; --background-alt: #f7f7f7; --selection: #9e9e9e; --text-main: #363636; --text-bright: #000; --text-muted: #70777f; --links: #0076d1; --focus: #0096bfab; --border: #dbdbdb; --code: #000; --animation-duration: 0.1s; --button-base: #d0cfcf; --button-hover: #9b9b9b; --scrollbar-thumb: color-mod(var(--button-hover) lightness(+6%)); --scrollbar-thumb-hover: var(--button-hover); --form-placeholder: #949494; --form-text: #1d1d1d; --variable: #39a33c; --highlight: #ff0; --select-arrow: svg-load('./assets/select-arrow.svg', fill: #161f27); } Que s\u00e3o principalmente as cores do nosso site, podemos alterar qualquer uma delas para se adaptar a nossa paleta de cores. Como eu vou saber qual vari\u00e1vel afeta qual? N\u00e3o vai, voc\u00ea vai ter mexer nelas e ver o que muda, ent\u00e3o cuidado na hora de subir mudan\u00e7as no seu pull request \ud83d\ude09 lembrando que qualquer altera\u00e7\u00e3o nesse arquivo vai influenciar o site inteiro. Mas como eu fa\u00e7o para n\u00e3o afetar o site inteiro? Quando voc\u00ea n\u00e3o quiser adicionar um estilo que vai afetar o site inteiro, primeiramente voc\u00ea ir\u00e1 adicionar uma classe ao seu html, exemplo: <p class=\"texto-atencao-aluno> Aten\u00e7\u00e3o <p> E a\u00ed no custom.css o seguinte: .texto-atencao-aluno{ color:red } O estilo de cor vermelho ent\u00e3o ser\u00e1 atribu\u00eddo somente aos elementos do HTML que possuem a classe texto-atencao-aluno . \u26a0\ufe0f Lembrando que as classes podem ser qualquer nome, desde que n\u00e3o contenham espa\u00e7os ou caracteres especiais.","title":"Frontend"},{"location":"frontend/#wireframe-e-fluxos-do-produto","text":"\u00c9pico 1: Exporta\u00e7\u00e3o de Dados Tela: Index.html com bot\u00e3o para gerar relat\u00f3rios, bot\u00e3o para exportar dados, e bot\u00f5es para acessar todas as funcionalidades do sistema. \u00c9pico 2: Gerenciamento de Turmas Telas: gerenciamento_turmas.html (Listagem de turmas), com bot\u00e3o para exclus\u00e3o de turmas. criar_turma.html (Cria\u00e7\u00e3o de turma) editar_turmas.html (Edi\u00e7\u00e3o de turma) \u00c9pico 3: Gerenciamento de Grupos Telas: visualizacao_grupos.html (Listagem de grupos), com bot\u00e3o para exclus\u00e3o de grupo. criar_grupo.html (Cria\u00e7\u00e3o de grupos) editar_grupos.html (Edi\u00e7\u00e3o de grupos) \u00c9pico 4: Gerenciamento de alunos. Telas: gerenciamento_alunos.html (Listagem de alunos), com bot\u00e3o para exclus\u00e3o de alunos. adicionar_aluno.html (Cria\u00e7\u00e3o de alunos) edicao_alunos.html (Edi\u00e7\u00e3o de alunos) \u00c9pico 5: Gerenciamento de Ciclos de Entrega e Scores Tela: gerenciamento_ciclos.html (Listagem de notas dos alunos), com bot\u00e3o para exclus\u00e3o de notas. editar_notas.html adicionar_notas.html \u00c9pico 6: Configura\u00e7\u00f5es Globais Tela: gerenciamento_global.html (Listagem e edi\u00e7\u00e3o de par\u00e2metros globais), com bot\u00e3o para exclus\u00e3o de configura\u00e7\u00f5es globais, que, cuidado, vai excluir a turma inteira. editar_gerenciamento_global.html","title":"Wireframe e fluxos do produto"},{"location":"frontend/#estilizacao-dos-componentes","text":"CSS CLASSLESS \u00e9 um stylesheet que n\u00e3o define classes que necessitem adicionar ao seus elementos HTML para estiliz\u00e1-los. Como resultado voc\u00ea adiciona o style a qualquer plain-HTML s\u00f3 linkando o stylesheet. Dessa maneira o desenvolvimento fica mais r\u00e1pido e fluido de maneira que fica mais f\u00e1cil construir as tarefas que entregar\u00e3o valor ao cliente. Ele funciona importando um stylesheet j\u00e1 pronto que j\u00e1 possui o estilo da maioria dos elementos HTML estilizados. No nosso projeto estamos utilizando o Water.css que \u00e9 uma cole\u00e7\u00e3o de estilos que v\u00e3o aplicar os conceitos acima no nosso projeto.","title":"Estiliza\u00e7\u00e3o dos Componentes"},{"location":"frontend/#como-funciona","text":"o Water css funciona importando essa linha de c\u00f3digo no head do html: <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/water.css@2/out/light.css\"> Logo abaixo essa linha temos outra linha que \u00e9 a seguinte: <link rel=\"stylesheet\" href=\"style/custom.css\"> Essa linha \u00e9 importante tamb\u00e9m, pois ela link um .CSS nosso que vai servir para a gente alterar qualquer css que a gente ache necess\u00e1rio. \u26a0\ufe0f Isso quer dizer que a gente tem de importar isso em todas as p\u00e1ginas .HTML? SIM, se n\u00e3o o estilo n\u00e3o ser\u00e1 aplicado O water \u00e9 bom pois tem a maioria dos elementos j\u00e1 cobertos, mas sempre pode ter um que ainda n\u00e3o foi feito no water ou que a gente simplesmente n\u00e3o gostou. Outra coisa importante, qualquer coisa que a gente adicionar no custom.css vai sobrepor o water.","title":"Como funciona?"},{"location":"frontend/#sobre-o-customcss","text":"Na doc do water temos essas vari\u00e1veis poss\u00edveis de alterar: :root { --background-body: #fff; --background: #efefef; --background-alt: #f7f7f7; --selection: #9e9e9e; --text-main: #363636; --text-bright: #000; --text-muted: #70777f; --links: #0076d1; --focus: #0096bfab; --border: #dbdbdb; --code: #000; --animation-duration: 0.1s; --button-base: #d0cfcf; --button-hover: #9b9b9b; --scrollbar-thumb: color-mod(var(--button-hover) lightness(+6%)); --scrollbar-thumb-hover: var(--button-hover); --form-placeholder: #949494; --form-text: #1d1d1d; --variable: #39a33c; --highlight: #ff0; --select-arrow: svg-load('./assets/select-arrow.svg', fill: #161f27); } Que s\u00e3o principalmente as cores do nosso site, podemos alterar qualquer uma delas para se adaptar a nossa paleta de cores. Como eu vou saber qual vari\u00e1vel afeta qual? N\u00e3o vai, voc\u00ea vai ter mexer nelas e ver o que muda, ent\u00e3o cuidado na hora de subir mudan\u00e7as no seu pull request \ud83d\ude09 lembrando que qualquer altera\u00e7\u00e3o nesse arquivo vai influenciar o site inteiro.","title":"Sobre o custom.css"},{"location":"frontend/#mas-como-eu-faco-para-nao-afetar-o-site-inteiro","text":"Quando voc\u00ea n\u00e3o quiser adicionar um estilo que vai afetar o site inteiro, primeiramente voc\u00ea ir\u00e1 adicionar uma classe ao seu html, exemplo: <p class=\"texto-atencao-aluno> Aten\u00e7\u00e3o <p> E a\u00ed no custom.css o seguinte: .texto-atencao-aluno{ color:red } O estilo de cor vermelho ent\u00e3o ser\u00e1 atribu\u00eddo somente aos elementos do HTML que possuem a classe texto-atencao-aluno . \u26a0\ufe0f Lembrando que as classes podem ser qualquer nome, desde que n\u00e3o contenham espa\u00e7os ou caracteres especiais.","title":"Mas como eu fa\u00e7o para n\u00e3o afetar o site inteiro?"},{"location":"retros/","text":"Resumo das Retros Retro - 25 de setembro de 2023 Problemas que tiveram: Comunica\u00e7\u00e3o : Caio : Whatsapp fica ruim os debates complexos. Mar\u00edlia : Precisamos tornar as coisas mais ass\u00edncronas. Clara : Aus\u00eancia de alguns integrantes. Demora para pedir ajuda. Conhecimento t\u00e9cnico : Sara : Onde vai mexer na documenta\u00e7\u00e3o. E o que as coisas serve com projeto principal. E onde enfiar as coisas. Definir tarefas. Mateus : Como fazer isso? As instru\u00e7\u00f5es iniciais. William : Ficou perdido. Ruth : Como fazer isso? As instru\u00e7\u00f5es iniciais. Dani : Precisa de previs\u00e3o do que precisa ser feito. Como fazer isso? As instru\u00e7\u00f5es iniciais. Coisas boas: Dani : Documento de apoio para instru\u00e7\u00e3o. Ruth : Documenta\u00e7\u00e3o. Caio : Organiza\u00e7\u00e3o e democracia. Clara : Todo mundo quer aprender. William : For\u00e7ou a estudar coisas novas. Mar\u00edlia : Existe a proatividade em perguntar. A\u00e7\u00f5es para remediar: Clara vai descrever como ocorrer o processo de recupera\u00e7\u00e3o de dados por meio da API via documenta\u00e7\u00e3o. Mar\u00edlia vai produzir um roadmap de estudos para apoio. Discuss\u00f5es complexas devem ir para o teams. Ruth vai dar um help para galera que quer entender mais de como fazer deploy na documenta\u00e7\u00e3o. Com backlog, vamos ter mais orienta\u00e7\u00e3o.","title":"Retros"},{"location":"retros/#retro-25-de-setembro-de-2023","text":"","title":"Retro - 25 de setembro de 2023"},{"location":"retros/#problemas-que-tiveram","text":"Comunica\u00e7\u00e3o : Caio : Whatsapp fica ruim os debates complexos. Mar\u00edlia : Precisamos tornar as coisas mais ass\u00edncronas. Clara : Aus\u00eancia de alguns integrantes. Demora para pedir ajuda. Conhecimento t\u00e9cnico : Sara : Onde vai mexer na documenta\u00e7\u00e3o. E o que as coisas serve com projeto principal. E onde enfiar as coisas. Definir tarefas. Mateus : Como fazer isso? As instru\u00e7\u00f5es iniciais. William : Ficou perdido. Ruth : Como fazer isso? As instru\u00e7\u00f5es iniciais. Dani : Precisa de previs\u00e3o do que precisa ser feito. Como fazer isso? As instru\u00e7\u00f5es iniciais.","title":"Problemas que tiveram:"},{"location":"retros/#coisas-boas","text":"Dani : Documento de apoio para instru\u00e7\u00e3o. Ruth : Documenta\u00e7\u00e3o. Caio : Organiza\u00e7\u00e3o e democracia. Clara : Todo mundo quer aprender. William : For\u00e7ou a estudar coisas novas. Mar\u00edlia : Existe a proatividade em perguntar.","title":"Coisas boas:"},{"location":"retros/#acoes-para-remediar","text":"Clara vai descrever como ocorrer o processo de recupera\u00e7\u00e3o de dados por meio da API via documenta\u00e7\u00e3o. Mar\u00edlia vai produzir um roadmap de estudos para apoio. Discuss\u00f5es complexas devem ir para o teams. Ruth vai dar um help para galera que quer entender mais de como fazer deploy na documenta\u00e7\u00e3o. Com backlog, vamos ter mais orienta\u00e7\u00e3o.","title":"A\u00e7\u00f5es para remediar:"},{"location":"roadmap/","text":"Roadmap Esse roadmap tem como objetivo auxiliar os participantes do grupo a terem uma dire\u00e7\u00e3o a seguir nos estudos para a cria\u00e7\u00e3o e estrutura\u00e7\u00e3o do projeto. Os objetivos deste roadmap s\u00e3o: dar um caminho do que estudar, como e onde. deixar todos com as mesmas informa\u00e7\u00f5es, e com no\u00e7\u00f5es parecidas sobre as tecnologias utilizadas no projeto. Iniciar e centralizar discuss\u00f5es sobre quest\u00f5es t\u00e9cnicas que o time est\u00e1 estudando atualmente. Sum\u00e1rio Introdu\u00e7\u00e3o Python B\u00e1sico GIt e Github Html e CSS JavaScript b\u00e1sico Protocolo HTTP APi (n\u00e3o a da Fatec) Frameworks Ambientes de desenvolvimento Todas essas coisas aplicados ao nosso trabalho. Um pouquinho sobre soft skills e comunica\u00e7\u00e3o ass\u00edncrona D\u00favidas gerais que eu n\u00e3o consegui colocar em caixinhas Introdu\u00e7\u00e3o Quando estamos tendo discuss\u00f5es sobre tem\u00e1ticas do nosso trabalho \u00e9 f\u00e1cil a gente fazer algo que \u00e9 , jogar palavrinhas dif\u00edceis para cima, e esperar que as pessoas entendam o que a gente quer dizer. Ent\u00e3o para solucionar esse problema de palavrinhas dif\u00edceis estou colocando aqui um roadmap que, espero eu, vai juntar todas informa\u00e7\u00f5es que a gente vai discutir no grupo e explicar as palavrinhas jogadas pro alto na sala para que assim, todos estejam na mesma p\u00e1gina. Separei as informa\u00e7\u00f5es por \u00e1rea de estudo, mas no nosso trabalho provavelmente as linhas do que \u00e9 isso e aquilo fiquem borradas, ent\u00e3o n\u00e3o fiquem com vergonha de perguntar como tal coisa \u00e9 aplicada ou tal conceito \u00e9 entendido. Colocarei no final um pouquinho sobre soft skills que ajudam muito na hora de trabalhar em conjunta e comunica\u00e7\u00e3o ass\u00edncrona (que \u00e9 como a gente se comunicar melhor via mensagem). para todos que est\u00e3o lendo aqui, encorajo que me tragam assuntos que faltam ou que julgam necess\u00e1rio, as vezes o que eu acho \u00f3bvio n\u00e3o \u00e9 \u00f3bvio para todos. Sintam-se livres para mandar dm ou jogar no grupo. Python B\u00e1sico Primeiro de tudo, n\u00e3o tem como a gente fazer nada no projeto sem saber python. Acredito que as aulas do nadalete devem cobrir a maioria do que a gente precisa, mas n\u00e3o r\u00e1pido o suficiente para a gente progredir na api. links de estudos python para zumbis \u00e9 uma playlist feita por um dos professores da fatec. Cobre o b\u00e1sico e sugiro fortemente que resolvam ao menos um dos exerc\u00edcios que ele coloca nos v\u00eddeos s\u00f3 para voc\u00ea sentir o que ele est\u00e1 falando. Python para Zumbis Livro de python de um carinha muito bom, que explica literalmente como pensar como um programador e coisa bem do in\u00edcio. N\u00e3o recomendo sentar e ler inteiro, mas sim como um guia. Por exemplo: Hoje ouvi as meninas falando sobre fun\u00e7\u00f5es, o que \u00e9 uma fun\u00e7\u00e3o? abro o livro e pesquiso no sum\u00e1rio as fun\u00e7\u00f5es. Pense em Python Outra fonte de pesquisa \u00e9 a pr\u00f3prio documenta\u00e7\u00e3o do python, de novo, n\u00e3o \u00e9 para sentar e ler, s\u00f3 para pesquisar conceitos espec\u00edficos que voc\u00ea quer saber: O tutorial de Python Git e Github Quando a gente come\u00e7a a programar em determinado momento a gente come\u00e7a a sentir a necessidade de salvar e versionar o c\u00f3digo. Basicamente Git \u00e9 um programinha que serve para a gente colocar bandeirinhas na hist\u00f3ria do nosso c\u00f3digo para termos checkpoints casos as coisas deem errado. Sabe quando em um jogo, a gente morre e depois volta para um lugar seguro? Basicamente \u00e9 para isso que server commits do git, para conforme o desenvolvimento do projeto a gente tenha um lugar seguro para voltar caso algo d\u00ea errado. A maioria das funcionalidades git foram feitas pensando em problemas assim que facilitam a vida do programador, em projetos solo e em projetos em equipe. Links de estudos Diferen\u00e7a de git e github bem curtinho e direto ao ponto: Entendendo as diferen\u00e7as entre Git e GitHub. Site bonitinho explicando alguns conceitos b\u00e1sicos: git - guia pr\u00e1tico - sem complica\u00e7\u00e3o! Documenta\u00e7\u00e3o oficial do github sobre pull requess: Sobre solicita\u00e7\u00e3o de pull - GitHub Docs Sobre os conflitos no github, tamb\u00e9m na documenta\u00e7\u00e3o oficial: Sobre conflitos de mesclagem - GitHub Docs A documenta\u00e7\u00e3o oficial do github \u00e9 o melhor lugar para procurar as palavrinhas dificeis que a gente solta nas reuni\u00f5es. Essa documenta\u00e7\u00e3o \u00e9 muito bem escrita, est\u00e1 em portugu\u00eas e possui informa\u00e7\u00f5es sobre tudo o que a gente est\u00e1 fazendo em quest\u00e3o de git e github. \ud83d\udea7 Em algum momento vou colocar uma listinha com os principais comandos (em constru\u00e7\u00e3o) Html e CSS Nosso front, tamb\u00e9m conhecido como a parte visual do nosso projeto. \u00c9 onde o usu\u00e1rio vai interagir, clicar, ler informa\u00e7\u00f5es, baixar pdf e etc. Links \u00fateis curso em v\u00eddeo do guanabara, muito boa e simples a explica\u00e7\u00e3o Come\u00e7a aqui o novo @CursoemVideo de HTML5 e CSS3 w3 schools, um bom lugar pra vc ver snippets(pedacinhos de c\u00f3digo), que voc\u00ea pode editar na web mesmo e ver os resultados. Uso bastante para lembrar de como funciona as sintaxe de determinado elemento. HTML Tutorial JavaScript B\u00e1sico Enquanto o Html \u00e9 o esqueleto do nosso front, o JavaSript \u00e9 o sistema nervoso, \u00e9 usando ele que a fente faz o site ficar reativo a mudan\u00e7as feitas nele. como por exemplo clicar em um bot\u00e3o ou preencher um formul\u00e1rio Links \u00dateis De novo, guanabara perfeito que sempre traz as melhores explica\u00e7\u00f5es das coisas. Voc\u00eas v\u00e3o perceber que exceto a parte do DOM, d\u00e1 pra relacionar muita coisa com o b\u00e1sico de python. Curso Gr\u00e1tis de JavaScript e ECMAScript para Iniciantes Esse site est\u00e1 em ingl\u00eas, mas tem muita coisa explicada a fundo. Inclusive coisas mais avan\u00e7adas, ent\u00e3o n\u00e3o precisa ler tudo, s\u00f3 utilizar de complemento para os estudos: The Modern JavaScript Tutorial Protocolo HTTP Http \u00e9 um protocolo para a internet, que \u00e9 base do funcionamento da internet. \u00c9 como o nosso front no navegador vai se comunicar com o nosso back. EU entendo que \u00e9 algo bem complexo de se entender, ent\u00e3o se voc\u00ea n\u00e3o entender todos os conceitos, n\u00e3o se desespere d\u00e1 pra gente andar sem saber de tudo. Links \u00fateis Sitezinho super \u00fatil que cobre o b\u00e1sico O que \u00e9 HTTP? - O guia para iniciantes \u00b7 cardtunic APi (n\u00e3o a da Fatec) Quando eu estava estudando me explicaram a API como o gar\u00e7on, que sai da cozinha(o backend) com as informa\u00e7\u00f5es que o cliente (front-end) vai consumir. links \u00fateis O protocolo https O Que \u00e9 API e Como Funciona? (API para Iniciantes / API O Que \u00c9 / O Que \u00e9 API em Programa\u00e7\u00e3o) Frameworks em constru\u00e7\u00e3o \ud83d\udea7 ambiente de desenvolvimento em constru\u00e7\u00e3o \ud83d\udea7 Todas essas coisas aplicados ao nosso trabalho. em constru\u00e7\u00e3o \ud83d\udea7 Assuntos gerais que eu n\u00e3o consegui colocar em caixinhas em constru\u00e7\u00e3o \ud83d\udea7","title":"Roadmap"},{"location":"roadmap/#roadmap","text":"Esse roadmap tem como objetivo auxiliar os participantes do grupo a terem uma dire\u00e7\u00e3o a seguir nos estudos para a cria\u00e7\u00e3o e estrutura\u00e7\u00e3o do projeto. Os objetivos deste roadmap s\u00e3o: dar um caminho do que estudar, como e onde. deixar todos com as mesmas informa\u00e7\u00f5es, e com no\u00e7\u00f5es parecidas sobre as tecnologias utilizadas no projeto. Iniciar e centralizar discuss\u00f5es sobre quest\u00f5es t\u00e9cnicas que o time est\u00e1 estudando atualmente.","title":"Roadmap"},{"location":"roadmap/#sumario","text":"Introdu\u00e7\u00e3o Python B\u00e1sico GIt e Github Html e CSS JavaScript b\u00e1sico Protocolo HTTP APi (n\u00e3o a da Fatec) Frameworks Ambientes de desenvolvimento Todas essas coisas aplicados ao nosso trabalho. Um pouquinho sobre soft skills e comunica\u00e7\u00e3o ass\u00edncrona D\u00favidas gerais que eu n\u00e3o consegui colocar em caixinhas","title":"Sum\u00e1rio"},{"location":"roadmap/#introducao","text":"Quando estamos tendo discuss\u00f5es sobre tem\u00e1ticas do nosso trabalho \u00e9 f\u00e1cil a gente fazer algo que \u00e9 , jogar palavrinhas dif\u00edceis para cima, e esperar que as pessoas entendam o que a gente quer dizer. Ent\u00e3o para solucionar esse problema de palavrinhas dif\u00edceis estou colocando aqui um roadmap que, espero eu, vai juntar todas informa\u00e7\u00f5es que a gente vai discutir no grupo e explicar as palavrinhas jogadas pro alto na sala para que assim, todos estejam na mesma p\u00e1gina. Separei as informa\u00e7\u00f5es por \u00e1rea de estudo, mas no nosso trabalho provavelmente as linhas do que \u00e9 isso e aquilo fiquem borradas, ent\u00e3o n\u00e3o fiquem com vergonha de perguntar como tal coisa \u00e9 aplicada ou tal conceito \u00e9 entendido. Colocarei no final um pouquinho sobre soft skills que ajudam muito na hora de trabalhar em conjunta e comunica\u00e7\u00e3o ass\u00edncrona (que \u00e9 como a gente se comunicar melhor via mensagem). para todos que est\u00e3o lendo aqui, encorajo que me tragam assuntos que faltam ou que julgam necess\u00e1rio, as vezes o que eu acho \u00f3bvio n\u00e3o \u00e9 \u00f3bvio para todos. Sintam-se livres para mandar dm ou jogar no grupo.","title":"Introdu\u00e7\u00e3o"},{"location":"roadmap/#python-basico","text":"Primeiro de tudo, n\u00e3o tem como a gente fazer nada no projeto sem saber python. Acredito que as aulas do nadalete devem cobrir a maioria do que a gente precisa, mas n\u00e3o r\u00e1pido o suficiente para a gente progredir na api. links de estudos python para zumbis \u00e9 uma playlist feita por um dos professores da fatec. Cobre o b\u00e1sico e sugiro fortemente que resolvam ao menos um dos exerc\u00edcios que ele coloca nos v\u00eddeos s\u00f3 para voc\u00ea sentir o que ele est\u00e1 falando. Python para Zumbis Livro de python de um carinha muito bom, que explica literalmente como pensar como um programador e coisa bem do in\u00edcio. N\u00e3o recomendo sentar e ler inteiro, mas sim como um guia. Por exemplo: Hoje ouvi as meninas falando sobre fun\u00e7\u00f5es, o que \u00e9 uma fun\u00e7\u00e3o? abro o livro e pesquiso no sum\u00e1rio as fun\u00e7\u00f5es. Pense em Python Outra fonte de pesquisa \u00e9 a pr\u00f3prio documenta\u00e7\u00e3o do python, de novo, n\u00e3o \u00e9 para sentar e ler, s\u00f3 para pesquisar conceitos espec\u00edficos que voc\u00ea quer saber: O tutorial de Python","title":"Python B\u00e1sico"},{"location":"roadmap/#git-e-github","text":"Quando a gente come\u00e7a a programar em determinado momento a gente come\u00e7a a sentir a necessidade de salvar e versionar o c\u00f3digo. Basicamente Git \u00e9 um programinha que serve para a gente colocar bandeirinhas na hist\u00f3ria do nosso c\u00f3digo para termos checkpoints casos as coisas deem errado. Sabe quando em um jogo, a gente morre e depois volta para um lugar seguro? Basicamente \u00e9 para isso que server commits do git, para conforme o desenvolvimento do projeto a gente tenha um lugar seguro para voltar caso algo d\u00ea errado. A maioria das funcionalidades git foram feitas pensando em problemas assim que facilitam a vida do programador, em projetos solo e em projetos em equipe. Links de estudos Diferen\u00e7a de git e github bem curtinho e direto ao ponto: Entendendo as diferen\u00e7as entre Git e GitHub. Site bonitinho explicando alguns conceitos b\u00e1sicos: git - guia pr\u00e1tico - sem complica\u00e7\u00e3o! Documenta\u00e7\u00e3o oficial do github sobre pull requess: Sobre solicita\u00e7\u00e3o de pull - GitHub Docs Sobre os conflitos no github, tamb\u00e9m na documenta\u00e7\u00e3o oficial: Sobre conflitos de mesclagem - GitHub Docs A documenta\u00e7\u00e3o oficial do github \u00e9 o melhor lugar para procurar as palavrinhas dificeis que a gente solta nas reuni\u00f5es. Essa documenta\u00e7\u00e3o \u00e9 muito bem escrita, est\u00e1 em portugu\u00eas e possui informa\u00e7\u00f5es sobre tudo o que a gente est\u00e1 fazendo em quest\u00e3o de git e github. \ud83d\udea7 Em algum momento vou colocar uma listinha com os principais comandos (em constru\u00e7\u00e3o)","title":"Git e Github"},{"location":"roadmap/#html-e-css","text":"Nosso front, tamb\u00e9m conhecido como a parte visual do nosso projeto. \u00c9 onde o usu\u00e1rio vai interagir, clicar, ler informa\u00e7\u00f5es, baixar pdf e etc. Links \u00fateis curso em v\u00eddeo do guanabara, muito boa e simples a explica\u00e7\u00e3o Come\u00e7a aqui o novo @CursoemVideo de HTML5 e CSS3 w3 schools, um bom lugar pra vc ver snippets(pedacinhos de c\u00f3digo), que voc\u00ea pode editar na web mesmo e ver os resultados. Uso bastante para lembrar de como funciona as sintaxe de determinado elemento. HTML Tutorial","title":"Html e CSS"},{"location":"roadmap/#javascript-basico","text":"Enquanto o Html \u00e9 o esqueleto do nosso front, o JavaSript \u00e9 o sistema nervoso, \u00e9 usando ele que a fente faz o site ficar reativo a mudan\u00e7as feitas nele. como por exemplo clicar em um bot\u00e3o ou preencher um formul\u00e1rio Links \u00dateis De novo, guanabara perfeito que sempre traz as melhores explica\u00e7\u00f5es das coisas. Voc\u00eas v\u00e3o perceber que exceto a parte do DOM, d\u00e1 pra relacionar muita coisa com o b\u00e1sico de python. Curso Gr\u00e1tis de JavaScript e ECMAScript para Iniciantes Esse site est\u00e1 em ingl\u00eas, mas tem muita coisa explicada a fundo. Inclusive coisas mais avan\u00e7adas, ent\u00e3o n\u00e3o precisa ler tudo, s\u00f3 utilizar de complemento para os estudos: The Modern JavaScript Tutorial","title":"JavaScript B\u00e1sico"},{"location":"roadmap/#protocolo-http","text":"Http \u00e9 um protocolo para a internet, que \u00e9 base do funcionamento da internet. \u00c9 como o nosso front no navegador vai se comunicar com o nosso back. EU entendo que \u00e9 algo bem complexo de se entender, ent\u00e3o se voc\u00ea n\u00e3o entender todos os conceitos, n\u00e3o se desespere d\u00e1 pra gente andar sem saber de tudo. Links \u00fateis Sitezinho super \u00fatil que cobre o b\u00e1sico O que \u00e9 HTTP? - O guia para iniciantes \u00b7 cardtunic","title":"Protocolo HTTP"},{"location":"roadmap/#api-nao-a-da-fatec","text":"Quando eu estava estudando me explicaram a API como o gar\u00e7on, que sai da cozinha(o backend) com as informa\u00e7\u00f5es que o cliente (front-end) vai consumir. links \u00fateis O protocolo https O Que \u00e9 API e Como Funciona? (API para Iniciantes / API O Que \u00c9 / O Que \u00e9 API em Programa\u00e7\u00e3o)","title":"APi (n\u00e3o a da Fatec)"},{"location":"roadmap/#frameworks","text":"em constru\u00e7\u00e3o \ud83d\udea7","title":"Frameworks"},{"location":"roadmap/#ambiente-de-desenvolvimento","text":"em constru\u00e7\u00e3o \ud83d\udea7","title":"ambiente de desenvolvimento"},{"location":"roadmap/#todas-essas-coisas-aplicados-ao-nosso-trabalho","text":"em constru\u00e7\u00e3o \ud83d\udea7","title":"Todas essas coisas aplicados ao nosso trabalho."},{"location":"roadmap/#assuntos-gerais-que-eu-nao-consegui-colocar-em-caixinhas","text":"em constru\u00e7\u00e3o \ud83d\udea7","title":"Assuntos gerais que eu n\u00e3o consegui colocar em caixinhas"},{"location":"sprints/","text":"BACKLOG API 1 SEMESTRE \u00c9picos Exporta\u00e7\u00e3o de Dados (Back-end) : A consolida\u00e7\u00e3o e exporta\u00e7\u00e3o de dados costumam ser tarefas realizadas no back-end, pois envolvem o processamento e a prepara\u00e7\u00e3o de dados para exporta\u00e7\u00e3o. Gerenciamento de Turmas (curso) : Esse \u00e9pico est\u00e1 relacionado \u00e0 cria\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de turmas, que envolvem a interface do usu\u00e1rio para realizar essas opera\u00e7\u00f5es. Gerenciamento de grupo : Esse \u00e9pico est\u00e1 relacionado \u00e0 cria\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de grupos, que envolvem a interface do usu\u00e1rio para realizar essas opera\u00e7\u00f5es. Gerenciamento de Alunos : Esse \u00e9pico lida com a adi\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de informa\u00e7\u00f5es de alunos, bem como a adi\u00e7\u00e3o de notas parciais, todos os quais s\u00e3o intera\u00e7\u00f5es do usu\u00e1rio com a interface. Gerenciamento de Ciclos de Entrega e Scores: Este \u00e9pico envolve a cria\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de ciclos de entrega e scores parciais, que s\u00e3o aspectos vis\u00edveis para o usu\u00e1rio. Visibilidade e Acompanhamento: Esse \u00e9pico visa fornecer informa\u00e7\u00f5es objetivas sobre turmas, grupos de alunos, etc. A apresenta\u00e7\u00e3o dessas informa\u00e7\u00f5es \u00e9 uma preocupa\u00e7\u00e3o do front-end. Configura\u00e7\u00f5es Globais (Back-end): Este \u00e9pico envolve a defini\u00e7\u00e3o de par\u00e2metros globais e o afeta o funcionamento do sistema. Essa configura\u00e7\u00e3o geralmente \u00e9 tratada no back-end. Importa\u00e7\u00e3o de Dados massivo (Back-end): A tarefa de carregar informa\u00e7\u00f5es de alunos e scores a partir de arquivos \u00e9 uma opera\u00e7\u00e3o que envolve o back-end, pois requer manipula\u00e7\u00e3o de dados. Detalhamento dos \u00c9picos \u00c9pico 1: Exporta\u00e7\u00e3o de Dados Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero selecionar as op\u00e7\u00f5es de gerenciamento e relat\u00f3rios. Isso envolve a exporta\u00e7\u00e3o de dados. Frontend: Bot\u00e3o no Index.html que gere relat\u00f3rios vindo dos: gerenciamento_turmas.html, gerenciamento_alunos.html, gerenciamento_ciclos.html, gerenciamento_global.html. Backend: Rota da API /api/relatorio/criar: Consolida os dados e exporta em formato PDF. Consolida os dados e os exporta em formato PDF. \u00c9pico 2: Gerenciamento de Turmas Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero visualizar a lista de turmas dispon\u00edveis, seus respectivos grupos com os alunos e alunos. Frontend: Gerenciamento_turmas.html que conter\u00e1 todas as turmas j\u00e1 criadas com \u00edcone de edi\u00e7\u00e3o e de exclus\u00e3o em cada um deles. Dever\u00e1 ser criado um campo onde ser\u00e3o inseridas as turmas de forma din\u00e2mica. Bot\u00e3o para criar uma nova turma. Backend M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para listar turmas. Rotas de API: /api/turmas/get: Retorna a lista de turmas dispon\u00edveis. /api/turmas/delete: Deletar uma turma. Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero criar uma nova turma com nome da turma, o professor e a associa\u00e7\u00e3o de grupos pr\u00e9-existentes ou nenhum grupo. A turma n\u00e3o precisa ser criada com grupo de alunos, mas precisa poder receb\u00ea-los. A turma s\u00f3 ser\u00e1 ativa com grupo de alunos vinculados. Frontend: Template HTML para Gerenciamento de Turmas: criar_turma.html que conter\u00e1 os formul\u00e1rios para criar uma nova turma. A inclus\u00e3o de grupos de alunos n\u00e3o precisa ser obrigat\u00f3ria. Nome da turma e professor s\u00e3o obrigat\u00f3rios. Campo para procurar por um grupo pr\u00e9-existente Campo para listar grupos Backend: M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para criar uma turma com/sem novo grupo de alunos. Rotas de API: /api/turmas/criar: Manipula a cria\u00e7\u00e3o de uma nova turma. /api/grupos /listar: Manipula a lista de grupos preexistente Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero editar as informa\u00e7\u00f5es de uma turma e adicionar mais grupos. Template HTML para Gerenciamento de Turmas: editar_turmas.html que conter\u00e1 os formul\u00e1rios de edi\u00e7\u00e3o de uma nova turma, com possibilidade de ser levada a edi\u00e7\u00e3o de grupo e de criar novo grupo. M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para atualizar informa\u00e7\u00f5es de turma e editar grupo de alunos. Rotas de API: /api/turmas/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de uma turma espec\u00edfica. /api/grupos/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um grupo de alunos espec\u00edfico. Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero excluir uma turma e um grupo de alunos. Frontend: \u00cdcone de exclus\u00e3o do grupo M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para excluir turmas. Rotas de API: /api/turmas/excluir/{id}: Manipula a exclus\u00e3o de uma turma espec\u00edfica. /api/grupos/excluir/{id}: Manipula a exclus\u00e3o de um grupo espec\u00edfico. (Vamos excluir o grupo?) \u00c9pico 3: Gerenciamento de grupos Hist\u00f3ria de Usu\u00e1rio 1: Como administrador, quero ver todos os grupos formados e associados \u00e0s turmas. Frontend: Template HTML para visualiza\u00e7\u00e3o de grupos: gerenciamento_grupos.html que conter\u00e1 todos os grupos j\u00e1 criados com \u00edcone de edi\u00e7\u00e3o e de exclus\u00e3o em cada um deles. Cada grupo deve apresentar seu nome e respectiva turma. Backend: M\u00f3dulo gerenciador_grupos.py com fun\u00e7\u00f5es para listar os grupos associados \u00e0s turmas. Rotas de API: /api/grupos/listar: Manipula a listagem de grupos. Hist\u00f3ria do usu\u00e1rio 2: Como um administrador, eu quero criar grupos de alunos associado a uma turma. Frontend Template HTML para criar um grupo: criar_grupo.html que conter\u00e1 os formul\u00e1rios de cria\u00e7\u00e3o de um novo grupo Selecionar a qual turma ele pertencer\u00e1. Para adicionar um grupo \u00e9 necess\u00e1rio inserir o nome do grupo e a turma. Backend M\u00f3dulo gerenciador_grupo.py com fun\u00e7\u00f5es para adicionar pr\u00e9-existente, e associar esse grupo a uma turma. Rotas de API: /api/tumas/listas: Fazer a leitura das turmas existentes. /api/grupos/adicionar: Manipula a adi\u00e7\u00e3o de um novo grupo a uma turma. Hist\u00f3ria do usu\u00e1rio 3: Como um administrador, eu quero editar grupos, essas devem ser associado a uma turma. Frontend Template HTML para Gerenciamento de um grupo: editar_grupo.html conter\u00e1 as informa\u00e7\u00f5es do grupo selecionado Pode levar a visualiza\u00e7\u00e3o das notas do aluno. Backend: M\u00f3dulo gerenciador_grupo.py com fun\u00e7\u00f5es para adicionar alunos pr\u00e9-existente, excluir aluno do grupo e editar qual turma esse grupo est\u00e1 associado. Rotas de API: /api/grupos/editar/{id}: Manipula para editar grupos. Hist\u00f3ria de Usu\u00e1rio 4: Como administrador, quero excluir os grupos Frontend: Template HTML para visualiza\u00e7\u00e3o de grupos: visualizacar_grupos.html que conter\u00e1 todos os grupos j\u00e1 criados com \u00edcone de edi\u00e7\u00e3o e de exclus\u00e3o em cada um deles. O \u00edcone deve acionar a a\u00e7\u00e3o de excluir Backend: M\u00f3dulo gerenciador_grupos.py com fun\u00e7\u00f5es para excluir o aluno selecionado. Rotas de API: /api/grupos/excluir/{id}: Manipula a listagem de grupos, excluindo o selecionado. \u00c9pico 4: Gerenciamento de Alunos Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero listar alunos existentes. Frontend Template HTML para listar Alunos: gerenciamento_alunos.html que conter\u00e1 um buscador e uma lista de alunos existentes, com bot\u00e3o para edi\u00e7\u00e3o e de exclus\u00e3o, e hiperlink para as notas do aluno Backend M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para listar um aluno. Rotas de API: /api/alunos/listar: Manipula a adi\u00e7\u00e3o de um novo aluno. Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero adicionar um novo aluno com informa\u00e7\u00f5es pessoais e matr\u00edcula Frontend Template HTML para Adicionar Alunos: gerenciamento_alunos.html que conter\u00e1 o formul\u00e1rio para adicionar um novo aluno Backend M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para adicionar um aluno. Rotas de API: /api/alunos/adicionar: Manipula a adi\u00e7\u00e3o de um novo aluno. Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero editar as informa\u00e7\u00f5es de um aluno existente. Frontend: Template HTML para editar aluno: edicao_alunos.html que conter\u00e1 o formul\u00e1rio para adicionar um novo aluno Backend: M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para atualizar(editar) informa\u00e7\u00f5es de alunos. Rotas de API: /api/alunos/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um aluno espec\u00edfico. Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero excluir alunos. Frontend: Template HTML para editar aluno : gerenciamento_alunos.html que um bot\u00e3o para exclus\u00e3o do aluno Backend: M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para excluir alunos. Rotas de API: /api/alunos/excluir/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um aluno espec\u00edfico. \u00c9pico 5: Gerenciamento de Ciclos de Entrega e Scores Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero visualizar(listar) as notas de um aluno. Preciso criar um campo para exibir o FEE total e parcial. Qual o c\u00e1lculo do FEE? FEE = ((Score do Ciclo de Entrega 1 (C1) _ Peso de C1) + ... + (Score do Ciclo de Entrega N (CN) _ Peso de CN)) / Soma dos Pesos de C Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: gerenciamento_ciclos.html que conter\u00e1 o aluno, as turmas que est\u00e3o matriculadas e as respectivas novas. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para listar as turmas e as notas associadas aquele aluno. Rotas de API: /api/notas/listar/aluno/{id}: Manipula a lista de um novo ciclo de entrega Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero adicionar uma nova nota a um aluno. Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: gerenciamento_ciclos.html que conter\u00e1 os formul\u00e1rios para criar uma nova nota associada a uma turma. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para criar nota associada a aluno e ao ciclo de entrega. Rotas de API: /api/notas/criar/turma/{id}: Manipula a cria\u00e7\u00e3o de um novo ciclo de entrega Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero editar as notas de entrega existente. Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: editar_nota.html que conter\u00e1 os formul\u00e1rios para editar uma nota pr\u00e9-existente associada a uma turma. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para as notas de ciclos de entrega. Rotas de API: /api/nota/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o da nota em uma determinada entrega espec\u00edfica. Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero excluir notas parciais para os alunos em rela\u00e7\u00e3o a um ciclo. Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: gerenciamento_ciclos.html que conter\u00e1 um \u00edcone que deletar a nota de um aluno associado a um ciclo e uma turma. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para excluir as notas de ciclos de entrega. Rotas de API: /api/nota/excluir/{id}: Manipula a exclus\u00e3o de uma nota em uma determinada entrega espec\u00edfica. \u00c9pico 6: Configura\u00e7\u00f5es Globais Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, quero listar e ver os par\u00e2metros globais das turmas Frontend: Template HTML para Gerenciamento Global: gerenciamento_global.html que conter\u00e1 as turmas existentes com seus respectivos parametros globais. Todas devem conter seu bot\u00e3o de editar. Backend: Fun\u00e7\u00e3o para listar par\u00e2metros globais no m\u00f3dulo gerenciador_configuracoes.py Rota de API: /api/globalsettings/listar para manipular a atualiza\u00e7\u00e3o dos par\u00e2metros globais. Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero editar par\u00e2metros globais, como datas do per\u00edodo letivo. Frontend: Template HTML para Gerenciamento Global: gerenciamento_global.html que conter\u00e1 os formul\u00e1rios para atualizar os par\u00e2metros globais de cada turma. Backend: Fun\u00e7\u00e3o para atualizar par\u00e2metros globais no m\u00f3dulo gerenciador_configuracoes.py Rota de API :api/globalsettings/{id}/editar para manipular a atualiza\u00e7\u00e3o dos par\u00e2metros globais. \u00c9pico 7: Carregamento de Dados massivo Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero carregar informa\u00e7\u00f5es de alunos partir de arquivos. Frontend: Tela de index.html ter\u00e1 um bot\u00e3o para update para o carregamento do CSV Sugest\u00e3o ( bot\u00e3o que faz download de uma planilha padr\u00e3o de sugest\u00e3o para a importa\u00e7\u00e3o do CSV) Backend: M\u00f3dulo carregamento_dados.py com fun\u00e7\u00f5es para carregar informa\u00e7\u00f5es de alunos e scores a partir de um arquivo CSV. Fun\u00e7\u00e3o para autenticar o formato do CSV, ou seja, ver se est\u00e1 dentro dos padr\u00f5es. Fun\u00e7\u00e3o para realizar o cadastramento de cada um dos alunos. Rotas de API: /api/carregamento: Manipula o carregamento de dados a partir de arquivos. Tabelas JSON: Tabela alunos.json Este arquivo cont\u00e9m informa\u00e7\u00f5es sobre os alunos, identificados por n\u00fameros (por exemplo, \"1\" e \"2\"). Cada aluno tem um campo \"nome\" que armazena o nome dele. { \"1\": { \"nome\": \"Clara Santos\" }, \"2\": { \"nome\": \"Marcelo Tambalo\" } } Tabela global_setting.json Este arquivo cont\u00e9m configura\u00e7\u00f5es globais do sistema, como a quantidade de sprints e a dura\u00e7\u00e3o de cada sprint. { \"quantidade_sprint\": 4, \"dias_sprint\": 15 } Tabela grupo_alunos.json Este arquivo associa cada aluno a um grupo espec\u00edfico. Cada aluno \u00e9 identificado por um n\u00famero, e cada entrada possui um campo \"grupo\" que indica a qual grupo o aluno pertence. { \"1\": { \"grupo\": 1 }, \"2\": { \"grupo\": 2 } } Tabela grupos.json Este arquivo cont\u00e9m informa\u00e7\u00f5es sobre os grupos, identificados por n\u00fameros. Cada grupo tem um campo \"turma\" que indica a qual turma ele pertence. { \"1\": { \"turma\": 1 }, \"2\": { \"turma\": 2 } } Tabela notas.json Este arquivo registra as notas dos grupos em cada sprint. Cada aluno \u00e9 identificado por um n\u00famero, e para cada aluno, h\u00e1 uma lista de objetos que cont\u00eam informa\u00e7\u00f5es sobre o grupo, o valor da nota e a sprint correspondente. { \"1\": [ { \"grupo\": 1, \"valor\": 8, \"sprint\": 1 }, { \"grupo\": 2, \"valor\": 6, \"sprint\": 2 } ], \"2\": [ { \"grupo\": 1, \"valor\": 8, \"sprint\": 1 }, { \"grupo\": 1, \"valor\": 6, \"sprint\": 2 } ] } Tabela turmas.json Este arquivo cont\u00e9m informa\u00e7\u00f5es sobre as turmas, identificadas por n\u00fameros. Cada turma tem um nome, um professor respons\u00e1vel e uma data de in\u00edcio. { \"1\": { \"nome\": \"turma1\", \"professor\": \"Nadalete\", \"data_de_inicio\": \"21/02/2023\" }, \"2\": { \"nome\": \"Turma da manh\u00e3\", \"professor\": \"Gorete\", \"data_de_inicio\": \"21/02/2023\" } } Resumo tabelas JSON: Cada aluno (identificado em alunos.json) pertence a um grupo (especificado em grupo_alunos.json), e cada grupo est\u00e1 associado a uma turma (em grupos.json). As notas dos grupos em cada sprint s\u00e3o registradas em notas.json e est\u00e3o associadas ao grupo correspondente e \u00e0 sprint. As configura\u00e7\u00f5es globais do sistema, como a quantidade de sprints e a dura\u00e7\u00e3o de cada sprint, s\u00e3o definidas em global_setting.json. Cada turma em turmas.json possui informa\u00e7\u00f5es sobre seu nome, o professor respons\u00e1vel e a data de in\u00edcio. BACKLOG 2\u00ba SPRINT \u00c9pico 2: Gerenciamento de Turmas \ud83d\udd34 Hist\u00f3ria de Usu\u00e1rio 1: Visualizar e Gerenciar Turmas Dispon\u00edveis Como um administrador, eu quero visualizar a lista de turmas dispon\u00edveis e gerenci\u00e1-las. Frontend: Crie um template HTML chamado gerenciamento_turmas.html que exibir\u00e1 todas as turmas j\u00e1 criadas. Na interface, liste as turmas existentes, incluindo um \u00edcone de edi\u00e7\u00e3o e um \u00edcone de exclus\u00e3o para cada turma. Implemente um bot\u00e3o \"Criar Turma\" que abrir\u00e1 um modal ao ser clicado. No modal \"Criar Turma\", inclua campos para inserir o nome da turma, nome do professor e um bot\u00e3o \"Salvar\". Quando o bot\u00e3o \"Salvar\" for clicado, envie um pedido POST para adicionar uma nova turma no arquivo turmas.json . Implemente um campo onde as turmas ser\u00e3o inseridas de forma din\u00e2mica. Forne\u00e7a um bot\u00e3o \"Criar Nova Turma\" para facilitar a cria\u00e7\u00e3o de turmas. Backend: Desenvolva um m\u00f3dulo chamado gerenciador_turmas.py com fun\u00e7\u00f5es para listar turmas e deletar turmas. Defina duas rotas de API: /api/turmas/get : Esta rota retorna a lista de turmas dispon\u00edveis como um JSON. /api/turmas/delete : Esta rota permite a exclus\u00e3o de uma turma espec\u00edfica. Fluxo de Atividade: O administrador acessa a p\u00e1gina gerenciamento_turmas.html no frontend. Na interface, a lista de turmas dispon\u00edveis \u00e9 exibida com \u00edcones de edi\u00e7\u00e3o e exclus\u00e3o para cada turma. O administrador pode clicar no \u00edcone de edi\u00e7\u00e3o para editar as informa\u00e7\u00f5es da turma ou clicar no \u00edcone de exclus\u00e3o para remover a turma. Ao clicar no bot\u00e3o \"Criar Turma\", um modal \u00e9 exibido com campos para inserir o nome da turma e o nome do professor. O administrador preenche os campos e clica em \"Salvar\" para criar uma nova turma, que \u00e9 adicionada dinamicamente \u00e0 lista de turmas. O administrador pode usar o bot\u00e3o \"Criar Nova Turma\" para adicionar mais turmas conforme necess\u00e1rio. Hist\u00f3ria de Usu\u00e1rio 2: Criar Nova Turma com Associa\u00e7\u00e3o Opcional de Grupos Como um administrador, eu quero criar uma nova turma com o nome da turma e o nome do professor, com a op\u00e7\u00e3o de associ\u00e1-la a grupos pr\u00e9-existentes, mas sem a obrigatoriedade de incluir grupos no momento da cria\u00e7\u00e3o. A turma s\u00f3 ser\u00e1 considerada ativa quando tiver grupos de alunos vinculados. Frontend: Crie um template HTML chamado criar_turma.html que conter\u00e1 os formul\u00e1rios para criar uma nova turma. Inclua campos obrigat\u00f3rios para inserir o nome da turma e o nome do professor. Implemente um campo onde o administrador possa procurar por grupos pr\u00e9-existentes. Ofere\u00e7a um campo para listar grupos e permita que o administrador escolha quais grupos deseja associar \u00e0 nova turma. A inclus\u00e3o de grupos de alunos n\u00e3o precisa ser obrigat\u00f3ria; deve ser opcional. Backend: Desenvolva um m\u00f3dulo chamado gerenciador_turmas.py com fun\u00e7\u00f5es para criar uma turma com ou sem a associa\u00e7\u00e3o de grupos de alunos. Defina duas rotas de API: /api/turmas/criar : Esta rota manipula a cria\u00e7\u00e3o de uma nova turma e permite ao administrador especificar o nome da turma, o nome do professor e a associa\u00e7\u00e3o opcional com grupos de alunos. /api/grupos/listar : Esta rota manipula a listagem de grupos pr\u00e9-existentes que podem ser associados a uma nova turma. Fluxo de Atividade: O administrador acessa a p\u00e1gina criar_turma.html no frontend. Na interface, s\u00e3o exibidos campos para inserir o nome da turma e o nome do professor, ambos obrigat\u00f3rios. O administrador pode usar um campo para procurar por grupos pr\u00e9-existentes ou listar grupos dispon\u00edveis. O administrador escolhe quais grupos deseja associar \u00e0 nova turma. O administrador preenche os campos necess\u00e1rios e pode optar por associar grupos ou deixar a associa\u00e7\u00e3o de grupos vazia. Ao clicar em \"Salvar\" ou \"Criar Turma\", o frontend envia uma solicita\u00e7\u00e3o HTTP POST para a rota de API /api/turmas/criar . O m\u00f3dulo gerenciador_turmas.py no backend processa a solicita\u00e7\u00e3o, cria a nova turma e, se aplic\u00e1vel, associa grupos de alunos a ela. A nova turma \u00e9 criada e pode ser considerada ativa assim que grupos de alunos forem associados a ela. Hist\u00f3ria de Usu\u00e1rio 3: Editar Informa\u00e7\u00f5es de Turma e Adicionar Grupos Como um administrador, eu quero editar as informa\u00e7\u00f5es de uma turma e adicionar grupos de alunos a ela. Frontend: Crie um template HTML chamado editar_turma.html que conter\u00e1 os formul\u00e1rios para editar informa\u00e7\u00f5es de uma turma existente. Implemente a funcionalidade que permite editar os detalhes da turma, como nome e professor. Ofere\u00e7a a capacidade de adicionar novos grupos de alunos \u00e0 turma ou editar grupos existentes. Todos os componentes da tela devem ter IDs que podem ser mapeados aos IDs da turma. Backend: Desenvolva um m\u00f3dulo chamado gerenciador_turmas.py com fun\u00e7\u00f5es para atualizar informa\u00e7\u00f5es de turma e editar grupos de alunos. Defina duas rotas de API: /api/turmas/atualizar/{id} : Esta rota manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de uma turma espec\u00edfica. O {id} identifica a turma que est\u00e1 sendo atualizada. /api/grupos/atualizar/{id} : Esta rota manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um grupo de alunos espec\u00edfico. O {id} identifica o grupo que est\u00e1 sendo atualizado. Fluxo de Atividade: O administrador acessa a p\u00e1gina editar_turma.html no frontend. Na interface, s\u00e3o exibidos campos para editar as informa\u00e7\u00f5es da turma, como nome e professor. O administrador pode clicar para editar grupos existentes ou adicionar novos grupos de alunos \u00e0 turma. Todos os componentes da tela possuem IDs que podem ser mapeados aos IDs da turma, permitindo a associa\u00e7\u00e3o direta de informa\u00e7\u00f5es. Quando o administrador realiza edi\u00e7\u00f5es, ele pode clicar em \"Salvar\" para confirmar as altera\u00e7\u00f5es. O frontend envia solicita\u00e7\u00f5es HTTP POST para as rotas de API correspondentes, /api/turmas/atualizar/{id} para turmas e /api/grupos/atualizar/{id} para grupos de alunos. O m\u00f3dulo gerenciador_turmas.py no backend processa as solicita\u00e7\u00f5es e atualiza as informa\u00e7\u00f5es da turma e dos grupos de alunos conforme necess\u00e1rio. Hist\u00f3ria de Usu\u00e1rio 4: Excluir uma Turma Como um administrador, eu quero excluir uma turma. Frontend: Implemente um \u00edcone de exclus\u00e3o para cada turma na interface do usu\u00e1rio. Quando o \u00edcone de exclus\u00e3o for clicado, ele dever\u00e1 acionar uma confirma\u00e7\u00e3o do administrador antes de prosseguir com a exclus\u00e3o. Backend: Desenvolva um m\u00f3dulo chamado gerenciador_turmas.py com fun\u00e7\u00f5es para excluir turmas. Defina uma rota de API: /api/turmas/excluir/{id} . O {id} identifica a turma que ser\u00e1 exclu\u00edda. Fluxo de Atividade: O administrador acessa a p\u00e1gina que exibe a lista de turmas no frontend. Na interface, cada turma \u00e9 acompanhada de um \u00edcone de exclus\u00e3o. Quando o administrador clica no \u00edcone de exclus\u00e3o, uma confirma\u00e7\u00e3o \u00e9 exibida para confirmar se ele deseja realmente excluir a turma. Ap\u00f3s a confirma\u00e7\u00e3o, o frontend envia uma solicita\u00e7\u00e3o HTTP DELETE para a rota de API correspondente, por exemplo, /api/turmas/excluir/{id} . O m\u00f3dulo gerenciador_turmas.py no backend processa a solicita\u00e7\u00e3o e exclui a turma especificada do sistema. \u00c9pico 6: Configura\u00e7\u00f5es Globais \ud83d\udd34 Hist\u00f3ria de Usu\u00e1rio 1: Visualizar Par\u00e2metros Globais Como um administrador, eu quero ver os par\u00e2metros globais das turmas. Frontend: Crie um template HTML que permita ao administrador visualizar os par\u00e2metros globais, incluindo a quantidade de sprints e o tempo de cada sprint. Exiba essas informa\u00e7\u00f5es em uma interface de usu\u00e1rio clara e leg\u00edvel. Backend: Desenvolva uma fun\u00e7\u00e3o no m\u00f3dulo gerenciador_configuracoes.py que permita listar os par\u00e2metros globais das turmas. Defina uma rota de API, por exemplo, /api/globalsettings/get , que o frontend pode acessar para recuperar os par\u00e2metros globais das turmas. Fluxo de Atividade: O administrador acessa a p\u00e1gina no frontend designada para visualizar os par\u00e2metros globais. O frontend envia uma solicita\u00e7\u00e3o HTTP GET para a rota de API /api/globalsettings/get no backend. A fun\u00e7\u00e3o no m\u00f3dulo gerenciador_configuracoes.py no backend processa a solicita\u00e7\u00e3o e recupera os par\u00e2metros globais das turmas. Os par\u00e2metros globais s\u00e3o enviados de volta ao frontend como uma resposta \u00e0 solicita\u00e7\u00e3o. O frontend exibe os par\u00e2metros globais na interface do usu\u00e1rio, permitindo que o administrador os visualize. Hist\u00f3ria de Usu\u00e1rio 2: Editar Par\u00e2metros Globais Como um administrador, eu quero editar par\u00e2metros globais, como datas do per\u00edodo letivo. Frontend: Crie um template HTML chamado gerenciamento_global.html que conter\u00e1 o formul\u00e1rio para atualizar os par\u00e2metros globais de cada turma. Implemente uma valida\u00e7\u00e3o para garantir que os campos sejam preenchidos antes de permitir a submiss\u00e3o do formul\u00e1rio. Inclua um bot\u00e3o que permitir\u00e1 ao administrador escrever as configura\u00e7\u00f5es atualizadas no arquivo configuracoesglobais.json por meio de um pedido HTTP POST. Backend: Desenvolva um m\u00f3dulo chamado gerenciador_configuracoes.py que conter\u00e1 uma fun\u00e7\u00e3o para atualizar os par\u00e2metros globais no sistema. Crie o arquivo globalsettings.json no banco de dados ou no sistema de armazenamento relevante para manter as configura\u00e7\u00f5es globais. Defina uma rota de API para processar as atualiza\u00e7\u00f5es dos par\u00e2metros globais, por exemplo, /api/globalsettings/{id}/post , onde {id} identifica a turma ou entidade relevante para a qual os par\u00e2metros est\u00e3o sendo atualizados. Fluxo de Atividade: O administrador acessa a p\u00e1gina gerenciamento_global.html no frontend. O formul\u00e1rio \u00e9 exibido, permitindo que o administrador edite os par\u00e2metros globais, como quantidade de sprints e dura\u00e7\u00e3o de sprints. O frontend valida os campos para garantir que todos estejam preenchidos corretamente. Ap\u00f3s a valida\u00e7\u00e3o bem-sucedida, o administrador clica no bot\u00e3o \"Salvar\". O frontend envia um pedido HTTP POST para a rota de API correspondente no backend. O m\u00f3dulo gerenciador_configuracoes.py no backend processa a solicita\u00e7\u00e3o, atualiza os par\u00e2metros globais e salva as altera\u00e7\u00f5es no arquivo globalsettings.json . As configura\u00e7\u00f5es globais s\u00e3o atualizadas e refletem as mudan\u00e7as feitas pelo administrador.","title":"Sprints"},{"location":"sprints/#epicos","text":"Exporta\u00e7\u00e3o de Dados (Back-end) : A consolida\u00e7\u00e3o e exporta\u00e7\u00e3o de dados costumam ser tarefas realizadas no back-end, pois envolvem o processamento e a prepara\u00e7\u00e3o de dados para exporta\u00e7\u00e3o. Gerenciamento de Turmas (curso) : Esse \u00e9pico est\u00e1 relacionado \u00e0 cria\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de turmas, que envolvem a interface do usu\u00e1rio para realizar essas opera\u00e7\u00f5es. Gerenciamento de grupo : Esse \u00e9pico est\u00e1 relacionado \u00e0 cria\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de grupos, que envolvem a interface do usu\u00e1rio para realizar essas opera\u00e7\u00f5es. Gerenciamento de Alunos : Esse \u00e9pico lida com a adi\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de informa\u00e7\u00f5es de alunos, bem como a adi\u00e7\u00e3o de notas parciais, todos os quais s\u00e3o intera\u00e7\u00f5es do usu\u00e1rio com a interface. Gerenciamento de Ciclos de Entrega e Scores: Este \u00e9pico envolve a cria\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de ciclos de entrega e scores parciais, que s\u00e3o aspectos vis\u00edveis para o usu\u00e1rio. Visibilidade e Acompanhamento: Esse \u00e9pico visa fornecer informa\u00e7\u00f5es objetivas sobre turmas, grupos de alunos, etc. A apresenta\u00e7\u00e3o dessas informa\u00e7\u00f5es \u00e9 uma preocupa\u00e7\u00e3o do front-end. Configura\u00e7\u00f5es Globais (Back-end): Este \u00e9pico envolve a defini\u00e7\u00e3o de par\u00e2metros globais e o afeta o funcionamento do sistema. Essa configura\u00e7\u00e3o geralmente \u00e9 tratada no back-end. Importa\u00e7\u00e3o de Dados massivo (Back-end): A tarefa de carregar informa\u00e7\u00f5es de alunos e scores a partir de arquivos \u00e9 uma opera\u00e7\u00e3o que envolve o back-end, pois requer manipula\u00e7\u00e3o de dados.","title":"\u00c9picos"},{"location":"sprints/#detalhamento-dos-epicos","text":"","title":"Detalhamento dos \u00c9picos"},{"location":"sprints/#epico-1-exportacao-de-dados","text":"","title":"\u00c9pico 1: Exporta\u00e7\u00e3o de Dados"},{"location":"sprints/#historia-de-usuario-1-como-um-administrador-eu-quero-selecionar-as-opcoes-de-gerenciamento-e-relatorios-isso-envolve-a-exportacao-de-dados","text":"Frontend: Bot\u00e3o no Index.html que gere relat\u00f3rios vindo dos: gerenciamento_turmas.html, gerenciamento_alunos.html, gerenciamento_ciclos.html, gerenciamento_global.html. Backend: Rota da API /api/relatorio/criar: Consolida os dados e exporta em formato PDF. Consolida os dados e os exporta em formato PDF.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero selecionar as op\u00e7\u00f5es de gerenciamento e relat\u00f3rios. Isso envolve a exporta\u00e7\u00e3o de dados."},{"location":"sprints/#epico-2-gerenciamento-de-turmas","text":"","title":"\u00c9pico 2: Gerenciamento de Turmas"},{"location":"sprints/#historia-de-usuario-1-como-um-administrador-eu-quero-visualizar-a-lista-de-turmas-disponiveis-seus-respectivos-grupos-com-os-alunos-e-alunos","text":"Frontend: Gerenciamento_turmas.html que conter\u00e1 todas as turmas j\u00e1 criadas com \u00edcone de edi\u00e7\u00e3o e de exclus\u00e3o em cada um deles. Dever\u00e1 ser criado um campo onde ser\u00e3o inseridas as turmas de forma din\u00e2mica. Bot\u00e3o para criar uma nova turma. Backend M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para listar turmas. Rotas de API: /api/turmas/get: Retorna a lista de turmas dispon\u00edveis. /api/turmas/delete: Deletar uma turma.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero visualizar a lista de turmas dispon\u00edveis, seus respectivos grupos com os alunos e alunos."},{"location":"sprints/#historia-de-usuario-2-como-um-administrador-eu-quero-criar-uma-nova-turma-com-nome-da-turma-o-professor-e-a-associacao-de-grupos-pre-existentes-ou-nenhum-grupo-a-turma-nao-precisa-ser-criada-com-grupo-de-alunos-mas-precisa-poder-recebe-los-a-turma-so-sera-ativa-com-grupo-de-alunos-vinculados","text":"Frontend: Template HTML para Gerenciamento de Turmas: criar_turma.html que conter\u00e1 os formul\u00e1rios para criar uma nova turma. A inclus\u00e3o de grupos de alunos n\u00e3o precisa ser obrigat\u00f3ria. Nome da turma e professor s\u00e3o obrigat\u00f3rios. Campo para procurar por um grupo pr\u00e9-existente Campo para listar grupos Backend: M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para criar uma turma com/sem novo grupo de alunos. Rotas de API: /api/turmas/criar: Manipula a cria\u00e7\u00e3o de uma nova turma. /api/grupos /listar: Manipula a lista de grupos preexistente","title":"Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero criar uma nova turma com nome da turma, o professor e a associa\u00e7\u00e3o de grupos pr\u00e9-existentes ou nenhum grupo. A turma n\u00e3o precisa ser criada com grupo de alunos, mas precisa poder receb\u00ea-los. A turma s\u00f3 ser\u00e1 ativa com grupo de alunos vinculados."},{"location":"sprints/#historia-de-usuario-3-como-um-administrador-eu-quero-editar-as-informacoes-de-uma-turma-e-adicionar-mais-grupos","text":"Template HTML para Gerenciamento de Turmas: editar_turmas.html que conter\u00e1 os formul\u00e1rios de edi\u00e7\u00e3o de uma nova turma, com possibilidade de ser levada a edi\u00e7\u00e3o de grupo e de criar novo grupo. M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para atualizar informa\u00e7\u00f5es de turma e editar grupo de alunos. Rotas de API: /api/turmas/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de uma turma espec\u00edfica. /api/grupos/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um grupo de alunos espec\u00edfico.","title":"Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero editar as informa\u00e7\u00f5es de uma turma e adicionar mais grupos."},{"location":"sprints/#historia-de-usuario-4-como-um-administrador-eu-quero-excluir-uma-turma-e-um-grupo-de-alunos","text":"Frontend: \u00cdcone de exclus\u00e3o do grupo M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para excluir turmas. Rotas de API: /api/turmas/excluir/{id}: Manipula a exclus\u00e3o de uma turma espec\u00edfica. /api/grupos/excluir/{id}: Manipula a exclus\u00e3o de um grupo espec\u00edfico. (Vamos excluir o grupo?)","title":"Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero excluir uma turma e um grupo de alunos."},{"location":"sprints/#epico-3-gerenciamento-de-grupos","text":"","title":"\u00c9pico 3: Gerenciamento de grupos"},{"location":"sprints/#historia-de-usuario-1-como-administrador-quero-ver-todos-os-grupos-formados-e-associados-as-turmas","text":"Frontend: Template HTML para visualiza\u00e7\u00e3o de grupos: gerenciamento_grupos.html que conter\u00e1 todos os grupos j\u00e1 criados com \u00edcone de edi\u00e7\u00e3o e de exclus\u00e3o em cada um deles. Cada grupo deve apresentar seu nome e respectiva turma. Backend: M\u00f3dulo gerenciador_grupos.py com fun\u00e7\u00f5es para listar os grupos associados \u00e0s turmas. Rotas de API: /api/grupos/listar: Manipula a listagem de grupos.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como administrador, quero ver todos os grupos formados e associados \u00e0s turmas."},{"location":"sprints/#historia-do-usuario-2-como-um-administrador-eu-quero-criar-grupos-de-alunos-associado-a-uma-turma","text":"Frontend Template HTML para criar um grupo: criar_grupo.html que conter\u00e1 os formul\u00e1rios de cria\u00e7\u00e3o de um novo grupo Selecionar a qual turma ele pertencer\u00e1. Para adicionar um grupo \u00e9 necess\u00e1rio inserir o nome do grupo e a turma. Backend M\u00f3dulo gerenciador_grupo.py com fun\u00e7\u00f5es para adicionar pr\u00e9-existente, e associar esse grupo a uma turma. Rotas de API: /api/tumas/listas: Fazer a leitura das turmas existentes. /api/grupos/adicionar: Manipula a adi\u00e7\u00e3o de um novo grupo a uma turma.","title":"Hist\u00f3ria do usu\u00e1rio 2: Como um administrador, eu quero criar grupos de alunos associado a uma turma."},{"location":"sprints/#historia-do-usuario-3-como-um-administrador-eu-quero-editar-grupos-essas-devem-ser-associado-a-uma-turma","text":"Frontend Template HTML para Gerenciamento de um grupo: editar_grupo.html conter\u00e1 as informa\u00e7\u00f5es do grupo selecionado Pode levar a visualiza\u00e7\u00e3o das notas do aluno. Backend: M\u00f3dulo gerenciador_grupo.py com fun\u00e7\u00f5es para adicionar alunos pr\u00e9-existente, excluir aluno do grupo e editar qual turma esse grupo est\u00e1 associado. Rotas de API: /api/grupos/editar/{id}: Manipula para editar grupos.","title":"Hist\u00f3ria do usu\u00e1rio 3: Como um administrador, eu quero editar grupos, essas devem ser associado a uma turma."},{"location":"sprints/#historia-de-usuario-4-como-administrador-quero-excluir-os-grupos-frontend","text":"Template HTML para visualiza\u00e7\u00e3o de grupos: visualizacar_grupos.html que conter\u00e1 todos os grupos j\u00e1 criados com \u00edcone de edi\u00e7\u00e3o e de exclus\u00e3o em cada um deles. O \u00edcone deve acionar a a\u00e7\u00e3o de excluir Backend: M\u00f3dulo gerenciador_grupos.py com fun\u00e7\u00f5es para excluir o aluno selecionado. Rotas de API: /api/grupos/excluir/{id}: Manipula a listagem de grupos, excluindo o selecionado.","title":"Hist\u00f3ria de Usu\u00e1rio 4: Como administrador, quero excluir os grupos Frontend:"},{"location":"sprints/#epico-4-gerenciamento-de-alunos","text":"","title":"\u00c9pico 4: Gerenciamento de Alunos"},{"location":"sprints/#historia-de-usuario-1-como-um-administrador-eu-quero-listar-alunos-existentes","text":"Frontend Template HTML para listar Alunos: gerenciamento_alunos.html que conter\u00e1 um buscador e uma lista de alunos existentes, com bot\u00e3o para edi\u00e7\u00e3o e de exclus\u00e3o, e hiperlink para as notas do aluno Backend M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para listar um aluno. Rotas de API: /api/alunos/listar: Manipula a adi\u00e7\u00e3o de um novo aluno.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero listar alunos existentes."},{"location":"sprints/#historia-de-usuario-2-como-um-administrador-eu-quero-adicionar-um-novo-aluno-com-informacoes-pessoais-e-matricula","text":"Frontend Template HTML para Adicionar Alunos: gerenciamento_alunos.html que conter\u00e1 o formul\u00e1rio para adicionar um novo aluno Backend M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para adicionar um aluno. Rotas de API: /api/alunos/adicionar: Manipula a adi\u00e7\u00e3o de um novo aluno.","title":"Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero adicionar um novo aluno com informa\u00e7\u00f5es pessoais e matr\u00edcula"},{"location":"sprints/#historia-de-usuario-3-como-um-administrador-eu-quero-editar-as-informacoes-de-um-aluno-existente","text":"Frontend: Template HTML para editar aluno: edicao_alunos.html que conter\u00e1 o formul\u00e1rio para adicionar um novo aluno Backend: M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para atualizar(editar) informa\u00e7\u00f5es de alunos. Rotas de API: /api/alunos/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um aluno espec\u00edfico.","title":"Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero editar as informa\u00e7\u00f5es de um aluno existente."},{"location":"sprints/#historia-de-usuario-4-como-um-administrador-eu-quero-excluir-alunos","text":"Frontend: Template HTML para editar aluno : gerenciamento_alunos.html que um bot\u00e3o para exclus\u00e3o do aluno Backend: M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para excluir alunos. Rotas de API: /api/alunos/excluir/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um aluno espec\u00edfico.","title":"Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero excluir alunos."},{"location":"sprints/#epico-5-gerenciamento-de-ciclos-de-entrega-e-scores","text":"","title":"\u00c9pico 5: Gerenciamento de Ciclos de Entrega e Scores"},{"location":"sprints/#historia-de-usuario-1-como-um-administrador-eu-quero-visualizarlistar-as-notas-de-um-aluno","text":"Preciso criar um campo para exibir o FEE total e parcial. Qual o c\u00e1lculo do FEE? FEE = ((Score do Ciclo de Entrega 1 (C1) _ Peso de C1) + ... + (Score do Ciclo de Entrega N (CN) _ Peso de CN)) / Soma dos Pesos de C Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: gerenciamento_ciclos.html que conter\u00e1 o aluno, as turmas que est\u00e3o matriculadas e as respectivas novas. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para listar as turmas e as notas associadas aquele aluno. Rotas de API: /api/notas/listar/aluno/{id}: Manipula a lista de um novo ciclo de entrega","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero visualizar(listar) as notas de um aluno."},{"location":"sprints/#historia-de-usuario-2-como-um-administrador-eu-quero-adicionar-uma-nova-nota-a-um-aluno","text":"Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: gerenciamento_ciclos.html que conter\u00e1 os formul\u00e1rios para criar uma nova nota associada a uma turma. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para criar nota associada a aluno e ao ciclo de entrega. Rotas de API: /api/notas/criar/turma/{id}: Manipula a cria\u00e7\u00e3o de um novo ciclo de entrega","title":"Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero adicionar uma nova nota a um aluno."},{"location":"sprints/#historia-de-usuario-3-como-um-administrador-eu-quero-editar-as-notas-de-entrega-existente","text":"Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: editar_nota.html que conter\u00e1 os formul\u00e1rios para editar uma nota pr\u00e9-existente associada a uma turma. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para as notas de ciclos de entrega. Rotas de API: /api/nota/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o da nota em uma determinada entrega espec\u00edfica.","title":"Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero editar as notas de entrega existente."},{"location":"sprints/#historia-de-usuario-4-como-um-administrador-eu-quero-excluir-notas-parciais-para-os-alunos-em-relacao-a-um-ciclo","text":"Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: gerenciamento_ciclos.html que conter\u00e1 um \u00edcone que deletar a nota de um aluno associado a um ciclo e uma turma. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para excluir as notas de ciclos de entrega. Rotas de API: /api/nota/excluir/{id}: Manipula a exclus\u00e3o de uma nota em uma determinada entrega espec\u00edfica.","title":"Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero excluir notas parciais para os alunos em rela\u00e7\u00e3o a um ciclo."},{"location":"sprints/#epico-6-configuracoes-globais","text":"","title":"\u00c9pico 6: Configura\u00e7\u00f5es Globais"},{"location":"sprints/#historia-de-usuario-1-como-um-administrador-quero-listar-e-ver-os-parametros-globais-das-turmas","text":"Frontend: Template HTML para Gerenciamento Global: gerenciamento_global.html que conter\u00e1 as turmas existentes com seus respectivos parametros globais. Todas devem conter seu bot\u00e3o de editar. Backend: Fun\u00e7\u00e3o para listar par\u00e2metros globais no m\u00f3dulo gerenciador_configuracoes.py Rota de API: /api/globalsettings/listar para manipular a atualiza\u00e7\u00e3o dos par\u00e2metros globais.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, quero listar e ver os par\u00e2metros globais das turmas"},{"location":"sprints/#historia-de-usuario-2-como-um-administrador-eu-quero-editar-parametros-globais-como-datas-do-periodo-letivo","text":"Frontend: Template HTML para Gerenciamento Global: gerenciamento_global.html que conter\u00e1 os formul\u00e1rios para atualizar os par\u00e2metros globais de cada turma. Backend: Fun\u00e7\u00e3o para atualizar par\u00e2metros globais no m\u00f3dulo gerenciador_configuracoes.py Rota de API :api/globalsettings/{id}/editar para manipular a atualiza\u00e7\u00e3o dos par\u00e2metros globais.","title":"Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero editar par\u00e2metros globais, como datas do per\u00edodo letivo."},{"location":"sprints/#epico-7-carregamento-de-dados-massivo","text":"","title":"\u00c9pico 7: Carregamento de Dados massivo"},{"location":"sprints/#historia-de-usuario-1-como-um-administrador-eu-quero-carregar-informacoes-de-alunos-partir-de-arquivos","text":"Frontend: Tela de index.html ter\u00e1 um bot\u00e3o para update para o carregamento do CSV Sugest\u00e3o ( bot\u00e3o que faz download de uma planilha padr\u00e3o de sugest\u00e3o para a importa\u00e7\u00e3o do CSV) Backend: M\u00f3dulo carregamento_dados.py com fun\u00e7\u00f5es para carregar informa\u00e7\u00f5es de alunos e scores a partir de um arquivo CSV. Fun\u00e7\u00e3o para autenticar o formato do CSV, ou seja, ver se est\u00e1 dentro dos padr\u00f5es. Fun\u00e7\u00e3o para realizar o cadastramento de cada um dos alunos. Rotas de API: /api/carregamento: Manipula o carregamento de dados a partir de arquivos.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero carregar informa\u00e7\u00f5es de alunos partir de arquivos."},{"location":"sprints/#tabelas-json","text":"","title":"Tabelas JSON:"},{"location":"sprints/#tabela-alunosjson","text":"Este arquivo cont\u00e9m informa\u00e7\u00f5es sobre os alunos, identificados por n\u00fameros (por exemplo, \"1\" e \"2\"). Cada aluno tem um campo \"nome\" que armazena o nome dele. { \"1\": { \"nome\": \"Clara Santos\" }, \"2\": { \"nome\": \"Marcelo Tambalo\" } }","title":"Tabela alunos.json"},{"location":"sprints/#tabela-global_settingjson","text":"Este arquivo cont\u00e9m configura\u00e7\u00f5es globais do sistema, como a quantidade de sprints e a dura\u00e7\u00e3o de cada sprint. { \"quantidade_sprint\": 4, \"dias_sprint\": 15 }","title":"Tabela global_setting.json"},{"location":"sprints/#tabela-grupo_alunosjson","text":"Este arquivo associa cada aluno a um grupo espec\u00edfico. Cada aluno \u00e9 identificado por um n\u00famero, e cada entrada possui um campo \"grupo\" que indica a qual grupo o aluno pertence. { \"1\": { \"grupo\": 1 }, \"2\": { \"grupo\": 2 } }","title":"Tabela grupo_alunos.json"},{"location":"sprints/#tabela-gruposjson","text":"Este arquivo cont\u00e9m informa\u00e7\u00f5es sobre os grupos, identificados por n\u00fameros. Cada grupo tem um campo \"turma\" que indica a qual turma ele pertence. { \"1\": { \"turma\": 1 }, \"2\": { \"turma\": 2 } }","title":"Tabela grupos.json"},{"location":"sprints/#tabela-notasjson","text":"Este arquivo registra as notas dos grupos em cada sprint. Cada aluno \u00e9 identificado por um n\u00famero, e para cada aluno, h\u00e1 uma lista de objetos que cont\u00eam informa\u00e7\u00f5es sobre o grupo, o valor da nota e a sprint correspondente. { \"1\": [ { \"grupo\": 1, \"valor\": 8, \"sprint\": 1 }, { \"grupo\": 2, \"valor\": 6, \"sprint\": 2 } ], \"2\": [ { \"grupo\": 1, \"valor\": 8, \"sprint\": 1 }, { \"grupo\": 1, \"valor\": 6, \"sprint\": 2 } ] }","title":"Tabela notas.json"},{"location":"sprints/#tabela-turmasjson","text":"Este arquivo cont\u00e9m informa\u00e7\u00f5es sobre as turmas, identificadas por n\u00fameros. Cada turma tem um nome, um professor respons\u00e1vel e uma data de in\u00edcio. { \"1\": { \"nome\": \"turma1\", \"professor\": \"Nadalete\", \"data_de_inicio\": \"21/02/2023\" }, \"2\": { \"nome\": \"Turma da manh\u00e3\", \"professor\": \"Gorete\", \"data_de_inicio\": \"21/02/2023\" } }","title":"Tabela turmas.json"},{"location":"sprints/#resumo-tabelas-json","text":"Cada aluno (identificado em alunos.json) pertence a um grupo (especificado em grupo_alunos.json), e cada grupo est\u00e1 associado a uma turma (em grupos.json). As notas dos grupos em cada sprint s\u00e3o registradas em notas.json e est\u00e3o associadas ao grupo correspondente e \u00e0 sprint. As configura\u00e7\u00f5es globais do sistema, como a quantidade de sprints e a dura\u00e7\u00e3o de cada sprint, s\u00e3o definidas em global_setting.json. Cada turma em turmas.json possui informa\u00e7\u00f5es sobre seu nome, o professor respons\u00e1vel e a data de in\u00edcio.","title":"Resumo tabelas JSON:"},{"location":"sprints/#backlog-2o-sprint","text":"","title":" BACKLOG 2\u00ba SPRINT "},{"location":"sprints/#epico-2-gerenciamento-de-turmas_1","text":"","title":"\u00c9pico 2: Gerenciamento de Turmas \ud83d\udd34"},{"location":"sprints/#historia-de-usuario-1-visualizar-e-gerenciar-turmas-disponiveis","text":"Como um administrador, eu quero visualizar a lista de turmas dispon\u00edveis e gerenci\u00e1-las.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Visualizar e Gerenciar Turmas Dispon\u00edveis"},{"location":"sprints/#frontend","text":"Crie um template HTML chamado gerenciamento_turmas.html que exibir\u00e1 todas as turmas j\u00e1 criadas. Na interface, liste as turmas existentes, incluindo um \u00edcone de edi\u00e7\u00e3o e um \u00edcone de exclus\u00e3o para cada turma. Implemente um bot\u00e3o \"Criar Turma\" que abrir\u00e1 um modal ao ser clicado. No modal \"Criar Turma\", inclua campos para inserir o nome da turma, nome do professor e um bot\u00e3o \"Salvar\". Quando o bot\u00e3o \"Salvar\" for clicado, envie um pedido POST para adicionar uma nova turma no arquivo turmas.json . Implemente um campo onde as turmas ser\u00e3o inseridas de forma din\u00e2mica. Forne\u00e7a um bot\u00e3o \"Criar Nova Turma\" para facilitar a cria\u00e7\u00e3o de turmas.","title":"Frontend:"},{"location":"sprints/#backend","text":"Desenvolva um m\u00f3dulo chamado gerenciador_turmas.py com fun\u00e7\u00f5es para listar turmas e deletar turmas. Defina duas rotas de API: /api/turmas/get : Esta rota retorna a lista de turmas dispon\u00edveis como um JSON. /api/turmas/delete : Esta rota permite a exclus\u00e3o de uma turma espec\u00edfica.","title":"Backend:"},{"location":"sprints/#fluxo-de-atividade","text":"O administrador acessa a p\u00e1gina gerenciamento_turmas.html no frontend. Na interface, a lista de turmas dispon\u00edveis \u00e9 exibida com \u00edcones de edi\u00e7\u00e3o e exclus\u00e3o para cada turma. O administrador pode clicar no \u00edcone de edi\u00e7\u00e3o para editar as informa\u00e7\u00f5es da turma ou clicar no \u00edcone de exclus\u00e3o para remover a turma. Ao clicar no bot\u00e3o \"Criar Turma\", um modal \u00e9 exibido com campos para inserir o nome da turma e o nome do professor. O administrador preenche os campos e clica em \"Salvar\" para criar uma nova turma, que \u00e9 adicionada dinamicamente \u00e0 lista de turmas. O administrador pode usar o bot\u00e3o \"Criar Nova Turma\" para adicionar mais turmas conforme necess\u00e1rio.","title":"Fluxo de Atividade:"},{"location":"sprints/#historia-de-usuario-2-criar-nova-turma-com-associacao-opcional-de-grupos","text":"Como um administrador, eu quero criar uma nova turma com o nome da turma e o nome do professor, com a op\u00e7\u00e3o de associ\u00e1-la a grupos pr\u00e9-existentes, mas sem a obrigatoriedade de incluir grupos no momento da cria\u00e7\u00e3o. A turma s\u00f3 ser\u00e1 considerada ativa quando tiver grupos de alunos vinculados.","title":"Hist\u00f3ria de Usu\u00e1rio 2: Criar Nova Turma com Associa\u00e7\u00e3o Opcional de Grupos"},{"location":"sprints/#frontend_1","text":"Crie um template HTML chamado criar_turma.html que conter\u00e1 os formul\u00e1rios para criar uma nova turma. Inclua campos obrigat\u00f3rios para inserir o nome da turma e o nome do professor. Implemente um campo onde o administrador possa procurar por grupos pr\u00e9-existentes. Ofere\u00e7a um campo para listar grupos e permita que o administrador escolha quais grupos deseja associar \u00e0 nova turma. A inclus\u00e3o de grupos de alunos n\u00e3o precisa ser obrigat\u00f3ria; deve ser opcional.","title":"Frontend:"},{"location":"sprints/#backend_1","text":"Desenvolva um m\u00f3dulo chamado gerenciador_turmas.py com fun\u00e7\u00f5es para criar uma turma com ou sem a associa\u00e7\u00e3o de grupos de alunos. Defina duas rotas de API: /api/turmas/criar : Esta rota manipula a cria\u00e7\u00e3o de uma nova turma e permite ao administrador especificar o nome da turma, o nome do professor e a associa\u00e7\u00e3o opcional com grupos de alunos. /api/grupos/listar : Esta rota manipula a listagem de grupos pr\u00e9-existentes que podem ser associados a uma nova turma.","title":"Backend:"},{"location":"sprints/#fluxo-de-atividade_1","text":"O administrador acessa a p\u00e1gina criar_turma.html no frontend. Na interface, s\u00e3o exibidos campos para inserir o nome da turma e o nome do professor, ambos obrigat\u00f3rios. O administrador pode usar um campo para procurar por grupos pr\u00e9-existentes ou listar grupos dispon\u00edveis. O administrador escolhe quais grupos deseja associar \u00e0 nova turma. O administrador preenche os campos necess\u00e1rios e pode optar por associar grupos ou deixar a associa\u00e7\u00e3o de grupos vazia. Ao clicar em \"Salvar\" ou \"Criar Turma\", o frontend envia uma solicita\u00e7\u00e3o HTTP POST para a rota de API /api/turmas/criar . O m\u00f3dulo gerenciador_turmas.py no backend processa a solicita\u00e7\u00e3o, cria a nova turma e, se aplic\u00e1vel, associa grupos de alunos a ela. A nova turma \u00e9 criada e pode ser considerada ativa assim que grupos de alunos forem associados a ela.","title":"Fluxo de Atividade:"},{"location":"sprints/#historia-de-usuario-3-editar-informacoes-de-turma-e-adicionar-grupos","text":"Como um administrador, eu quero editar as informa\u00e7\u00f5es de uma turma e adicionar grupos de alunos a ela.","title":"Hist\u00f3ria de Usu\u00e1rio 3: Editar Informa\u00e7\u00f5es de Turma e Adicionar Grupos"},{"location":"sprints/#frontend_2","text":"Crie um template HTML chamado editar_turma.html que conter\u00e1 os formul\u00e1rios para editar informa\u00e7\u00f5es de uma turma existente. Implemente a funcionalidade que permite editar os detalhes da turma, como nome e professor. Ofere\u00e7a a capacidade de adicionar novos grupos de alunos \u00e0 turma ou editar grupos existentes. Todos os componentes da tela devem ter IDs que podem ser mapeados aos IDs da turma.","title":"Frontend:"},{"location":"sprints/#backend_2","text":"Desenvolva um m\u00f3dulo chamado gerenciador_turmas.py com fun\u00e7\u00f5es para atualizar informa\u00e7\u00f5es de turma e editar grupos de alunos. Defina duas rotas de API: /api/turmas/atualizar/{id} : Esta rota manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de uma turma espec\u00edfica. O {id} identifica a turma que est\u00e1 sendo atualizada. /api/grupos/atualizar/{id} : Esta rota manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um grupo de alunos espec\u00edfico. O {id} identifica o grupo que est\u00e1 sendo atualizado.","title":"Backend:"},{"location":"sprints/#fluxo-de-atividade_2","text":"O administrador acessa a p\u00e1gina editar_turma.html no frontend. Na interface, s\u00e3o exibidos campos para editar as informa\u00e7\u00f5es da turma, como nome e professor. O administrador pode clicar para editar grupos existentes ou adicionar novos grupos de alunos \u00e0 turma. Todos os componentes da tela possuem IDs que podem ser mapeados aos IDs da turma, permitindo a associa\u00e7\u00e3o direta de informa\u00e7\u00f5es. Quando o administrador realiza edi\u00e7\u00f5es, ele pode clicar em \"Salvar\" para confirmar as altera\u00e7\u00f5es. O frontend envia solicita\u00e7\u00f5es HTTP POST para as rotas de API correspondentes, /api/turmas/atualizar/{id} para turmas e /api/grupos/atualizar/{id} para grupos de alunos. O m\u00f3dulo gerenciador_turmas.py no backend processa as solicita\u00e7\u00f5es e atualiza as informa\u00e7\u00f5es da turma e dos grupos de alunos conforme necess\u00e1rio.","title":"Fluxo de Atividade:"},{"location":"sprints/#historia-de-usuario-4-excluir-uma-turma","text":"Como um administrador, eu quero excluir uma turma.","title":"Hist\u00f3ria de Usu\u00e1rio 4: Excluir uma Turma"},{"location":"sprints/#frontend_3","text":"Implemente um \u00edcone de exclus\u00e3o para cada turma na interface do usu\u00e1rio. Quando o \u00edcone de exclus\u00e3o for clicado, ele dever\u00e1 acionar uma confirma\u00e7\u00e3o do administrador antes de prosseguir com a exclus\u00e3o.","title":"Frontend:"},{"location":"sprints/#backend_3","text":"Desenvolva um m\u00f3dulo chamado gerenciador_turmas.py com fun\u00e7\u00f5es para excluir turmas. Defina uma rota de API: /api/turmas/excluir/{id} . O {id} identifica a turma que ser\u00e1 exclu\u00edda.","title":"Backend:"},{"location":"sprints/#fluxo-de-atividade_3","text":"O administrador acessa a p\u00e1gina que exibe a lista de turmas no frontend. Na interface, cada turma \u00e9 acompanhada de um \u00edcone de exclus\u00e3o. Quando o administrador clica no \u00edcone de exclus\u00e3o, uma confirma\u00e7\u00e3o \u00e9 exibida para confirmar se ele deseja realmente excluir a turma. Ap\u00f3s a confirma\u00e7\u00e3o, o frontend envia uma solicita\u00e7\u00e3o HTTP DELETE para a rota de API correspondente, por exemplo, /api/turmas/excluir/{id} . O m\u00f3dulo gerenciador_turmas.py no backend processa a solicita\u00e7\u00e3o e exclui a turma especificada do sistema.","title":"Fluxo de Atividade:"},{"location":"sprints/#epico-6-configuracoes-globais_1","text":"","title":"\u00c9pico 6: Configura\u00e7\u00f5es Globais \ud83d\udd34"},{"location":"sprints/#historia-de-usuario-1-visualizar-parametros-globais","text":"Como um administrador, eu quero ver os par\u00e2metros globais das turmas.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Visualizar Par\u00e2metros Globais"},{"location":"sprints/#frontend_4","text":"Crie um template HTML que permita ao administrador visualizar os par\u00e2metros globais, incluindo a quantidade de sprints e o tempo de cada sprint. Exiba essas informa\u00e7\u00f5es em uma interface de usu\u00e1rio clara e leg\u00edvel.","title":"Frontend:"},{"location":"sprints/#backend_4","text":"Desenvolva uma fun\u00e7\u00e3o no m\u00f3dulo gerenciador_configuracoes.py que permita listar os par\u00e2metros globais das turmas. Defina uma rota de API, por exemplo, /api/globalsettings/get , que o frontend pode acessar para recuperar os par\u00e2metros globais das turmas.","title":"Backend:"},{"location":"sprints/#fluxo-de-atividade_4","text":"O administrador acessa a p\u00e1gina no frontend designada para visualizar os par\u00e2metros globais. O frontend envia uma solicita\u00e7\u00e3o HTTP GET para a rota de API /api/globalsettings/get no backend. A fun\u00e7\u00e3o no m\u00f3dulo gerenciador_configuracoes.py no backend processa a solicita\u00e7\u00e3o e recupera os par\u00e2metros globais das turmas. Os par\u00e2metros globais s\u00e3o enviados de volta ao frontend como uma resposta \u00e0 solicita\u00e7\u00e3o. O frontend exibe os par\u00e2metros globais na interface do usu\u00e1rio, permitindo que o administrador os visualize.","title":"Fluxo de Atividade:"},{"location":"sprints/#historia-de-usuario-2-editar-parametros-globais","text":"Como um administrador, eu quero editar par\u00e2metros globais, como datas do per\u00edodo letivo.","title":"Hist\u00f3ria de Usu\u00e1rio 2: Editar Par\u00e2metros Globais"},{"location":"sprints/#frontend_5","text":"Crie um template HTML chamado gerenciamento_global.html que conter\u00e1 o formul\u00e1rio para atualizar os par\u00e2metros globais de cada turma. Implemente uma valida\u00e7\u00e3o para garantir que os campos sejam preenchidos antes de permitir a submiss\u00e3o do formul\u00e1rio. Inclua um bot\u00e3o que permitir\u00e1 ao administrador escrever as configura\u00e7\u00f5es atualizadas no arquivo configuracoesglobais.json por meio de um pedido HTTP POST.","title":"Frontend:"},{"location":"sprints/#backend_5","text":"Desenvolva um m\u00f3dulo chamado gerenciador_configuracoes.py que conter\u00e1 uma fun\u00e7\u00e3o para atualizar os par\u00e2metros globais no sistema. Crie o arquivo globalsettings.json no banco de dados ou no sistema de armazenamento relevante para manter as configura\u00e7\u00f5es globais. Defina uma rota de API para processar as atualiza\u00e7\u00f5es dos par\u00e2metros globais, por exemplo, /api/globalsettings/{id}/post , onde {id} identifica a turma ou entidade relevante para a qual os par\u00e2metros est\u00e3o sendo atualizados.","title":"Backend:"},{"location":"sprints/#fluxo-de-atividade_5","text":"O administrador acessa a p\u00e1gina gerenciamento_global.html no frontend. O formul\u00e1rio \u00e9 exibido, permitindo que o administrador edite os par\u00e2metros globais, como quantidade de sprints e dura\u00e7\u00e3o de sprints. O frontend valida os campos para garantir que todos estejam preenchidos corretamente. Ap\u00f3s a valida\u00e7\u00e3o bem-sucedida, o administrador clica no bot\u00e3o \"Salvar\". O frontend envia um pedido HTTP POST para a rota de API correspondente no backend. O m\u00f3dulo gerenciador_configuracoes.py no backend processa a solicita\u00e7\u00e3o, atualiza os par\u00e2metros globais e salva as altera\u00e7\u00f5es no arquivo globalsettings.json . As configura\u00e7\u00f5es globais s\u00e3o atualizadas e refletem as mudan\u00e7as feitas pelo administrador.","title":"Fluxo de Atividade:"}]}